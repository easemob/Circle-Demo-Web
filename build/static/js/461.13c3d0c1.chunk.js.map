{"version":3,"file":"static/js/461.13c3d0c1.chunk.js","mappings":"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","sources":["webpack://circle/./src/components/BasicInfo/index.module.less?e2c4","components/BasicInfo/index.js","webpack://circle/./src/components/MemberItem/index.module.less?cdd0","components/MemberItem/index.js","webpack://circle/./src/views/ContactsOperation/index.module.less?b58a","views/ContactsOperation/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"info\":\"index_info__ZJIn6\",\"defaultStyle\":\"index_defaultStyle__+aVsA\",\"name\":\"index_name__DW1g1\",\"all\":\"index_all__JUGKz\",\"online\":\"index_online__pBQbe\",\"offline\":\"index_offline__nm8iG\"};","import style from \"./index.module.less\";\nimport React, { memo } from \"react\";\n\nconst BasicInfo = (props) => {\n    const { online, name, showOnline } = props\n    return (\n        <div className={style.info}>\n            <span className={`${style.defaultStyle} ${showOnline ? style.name : style.all}`}>{name}</span>\n            {showOnline && <span className={`${style.online} ${online ? null : style.offline}`}>{online ? '在线' : '离线'}</span>}\n        </div>\n    );\n};\n\nexport default memo(BasicInfo);\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsItem\":\"index_contactsItem__td4Mf\",\"selected\":\"index_selected__gwyZ5\",\"contactsItem2\":\"index_contactsItem2__cp+N3\",\"mainInfo\":\"index_mainInfo__5wuox\",\"avatar\":\"index_avatar__jTpQV\",\"type2\":\"index_type2__rGTXq\",\"basicInfo\":\"index_basicInfo__B8XcK\",\"operation\":\"index_operation__-G2DM\"};","import BasicInfo from '@/components/BasicInfo'\nimport AvatarInfo from '@/components/AvatarInfo'\nimport s from \"./index.module.less\";\nimport React, { memo, useRef, useState, useEffect } from \"react\";\n\nconst MemberItem = (props) => {\n    const { info, uid, operationReactNode, handlerHover, borderType, basicShowOnline } = props;\n    const memberItemRef = useRef();\n    const [selected, setSelected] = useState(false);\n    //点击消息\n    useEffect(() => {\n        let onClick = (e) => {\n            let dom = memberItemRef.current;\n            if (dom) {\n                // 如果点击的区域不在自定义dom范围\n                if (dom.contains(e.target)) {\n                    setSelected(true)\n                } else {\n                    setSelected(false)\n                }\n            }\n        };\n        document.addEventListener(\"click\", onClick);\n        return () => {\n            document.removeEventListener(\"click\", onClick);\n        };\n    }, []);\n    return (\n        <div className={`memberItem ${s.contactsItem} ${selected ? s.selected : borderType === 2 ? s.contactsItem2 : null} `} onMouseOver={() => { handlerHover && handlerHover(info?.uid) }} onMouseLeave={() => { handlerHover && handlerHover(\"\") }}>\n            <div className={s.avatar}>\n                <AvatarInfo name={info?.nickname || uid} src={info?.avatarurl} online={info?.online} />\n            </div>\n            <div className={`${s.mainInfo} ${borderType === 2 ? s.type2 : null}`}>\n                <div className={s.basicInfo}>\n                    <BasicInfo name={info?.nickname || uid} src={info?.avatarurl} online={info?.online} showOnline={basicShowOnline} />\n                </div>\n                <div className={s.operation} ref={memberItemRef}>\n                    {operationReactNode}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(MemberItem);\n\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"index_main__tkdxB\",\"top\":\"index_top__2-I3b\",\"left\":\"index_left__FScFa\",\"contactsText\":\"index_contactsText__FnqNh\",\"buttonCon\":\"index_buttonCon__KgCBc\",\"button\":\"index_button__+k2qj\",\"new\":\"index_new__j6I5w\",\"selected\":\"index_selected__xpbSB\",\"rightCon\":\"index_rightCon__elFjq\",\"right\":\"index_right__8XmNI\",\"addIcon\":\"index_addIcon__J9Z6a\",\"addText\":\"index_addText__5hG+J\",\"content\":\"index_content__i9a1y\",\"noApply\":\"index_noApply__Z9qzG\",\"noApplyIcon\":\"index_noApplyIcon__F2iYZ\",\"noApplyText\":\"index_noApplyText__L50FC\",\"addContact\":\"index_addContact__fjKjs\",\"dialog\":\"index_dialog__WoUfV\",\"title\":\"index_title__2kaSH\",\"titleClose\":\"index_titleClose__oVB1V\",\"searchId\":\"index_searchId__fpLLN\",\"searchInput2\":\"index_searchInput2__heQ4f\",\"searchButton\":\"index_searchButton__CQouB\",\"tips\":\"index_tips__1EiSc\",\"applyOperation\":\"index_applyOperation__ojN+u\",\"acceptButton\":\"index_acceptButton__w5yMA\",\"operation\":\"index_operation__yXoA2\",\"chat\":\"index_chat__AwVsf\",\"delete\":\"index_delete__caVSh\",\"chatIcon\":\"index_chatIcon__soi3K\",\"deleteIcon\":\"index_deleteIcon__BZs6s\",\"chatIconFont\":\"index_chatIconFont__uhp99\",\"focus\":\"index_focus__FIUsT\",\"searchResultPop\":\"index_searchResultPop__Z-2ZH\",\"searchCon\":\"index_searchCon__6UizV\",\"hasBorder\":\"index_hasBorder__f-gKW\",\"noResult\":\"index_noResult__-7Hck\",\"closeIconCon\":\"index_closeIconCon__njz3u\",\"searchIcon\":\"index_searchIcon__S4uOT\",\"searchInput\":\"index_searchInput__ZEPbe\",\"searchResult\":\"index_searchResult__aX5qV\",\"searchResultList\":\"index_searchResultList__k2Yax\"};","import React, { memo, useState, useEffect, useRef, createRef } from \"react\";\nimport s from \"./index.module.less\";\nimport { connect } from \"react-redux\";\nimport WebIM from \"@/utils/WebIM\";\nimport { getUsersInfo } from \"@/utils/common\"\nimport MemberItem from \"@/components/MemberItem\";\nimport { Dropdown, Menu, Popover, message, Tooltip } from 'antd';\nimport Icon from \"@/components/Icon\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst menu = (uid, onDelete) => {\n    return (\n        <Menu\n            onClick={() => { onDelete(uid) }}\n            items={[\n                {\n                    key: '1',\n                    label: (\n                        <div className=\"circleDropItem\">\n                            <Icon name=\"trash\" size=\"22px\" iconClass=\"circleDropMenuIcon\" />\n                            <span className=\"circleDropMenuOp\">删除好友</span>\n                        </div>\n                    ),\n                },\n            ]}\n        />\n    )\n}\nconst emptyDom = (txt) => {\n    return (\n        <div className={s.noApply}>\n            <div className={s.noApplyIcon}></div>\n            <p className={s.noApplyText}>{txt}</p>\n        </div>\n    )\n}\nconst ContactsOperation = (props) => {\n    const { appUserInfo, contactsList, applyInfo, setContactsList, setApplyInfo } = props;\n    const navigate = useNavigate()\n    //初始化联系人数据\n    useEffect(() => {\n        if (contactsList.length > 0) return\n        WebIM.conn.getContacts().then(res => {\n            if (res.data.length > 0) {\n                getUsersInfo(res.data)\n                setContactsList(res.data);\n            }\n        })\n    }, [])\n    //切换tab或原始数据变化,更新可见列表\n    const [tab, setTab] = useState('online');\n    const [showList, setShowList] = useState([]);\n    useEffect(() => {\n        if (tab === 'online') {\n            let onLineList = contactsList.length > 0 ? contactsList.filter(item => appUserInfo[item]?.online === 1) : [];\n            setShowList(onLineList)\n        } else if (tab === 'all') {\n            setShowList(contactsList)\n        }\n    }, [appUserInfo, contactsList, tab])\n\n    //搜索联系人，前端实现，按照昵称和用户名查询\n    const [searchValue, setSearchValue] = useState('');\n    const changeSearchValue = (e) => {\n        setSearchValue(e.target.value);\n    }\n    const [searchList, setSearchList] = useState({});\n    useEffect(() => {\n        if (searchValue.replace(/(^\\s*)|(\\s*$)/g, \"\") !== \"\") {\n            if (contactsList.length > 0) {\n                const list = [];\n                contactsList.forEach(item => {\n                    if (appUserInfo[item]?.nickname.toLowerCase().indexOf(searchValue.toLocaleLowerCase()) > -1 || item.toLocaleLowerCase().indexOf(searchValue.toLocaleLowerCase()) > -1) {\n                        list.push(item);\n                    }\n                })\n                setSearchList(list)\n            }\n            searchValue !== \"\" && handleVisibleChange(true)\n        } else {\n            setSearchList([])\n            handleVisibleChange(false)\n        }\n    }, [appUserInfo, contactsList, searchValue])\n    const [visible, setVisible] = useState(false);\n\n    const handleVisibleChange = (data) => {\n        if(data){\n            searchValue !== \"\" && setVisible(data);\n        }else{\n            setVisible(data);\n        }\n    };\n\n    //添加好友弹窗，弹窗打开自动聚焦\n    const [showAddDialog, setShowAddDialog] = useState(false);\n    const addContactEle = useRef();\n    useEffect(() => {\n        showAddDialog && addContactEle && addContactEle.current.focus();\n    }, [showAddDialog])\n\n    //好友id查找\n    const [searchContact, setSearchContact] = useState('');\n    const [showTips, setShowTips] = useState(false)\n    const changeSearchContact = (e) => {\n        setSearchContact(e.target.value);\n    }\n    //发送添加好友邀请\n    const addContact = () => {\n        if (searchContact === \"\") {\n            return\n        } else if (!/^1\\d{10}$/.test(searchContact)) {\n            message.warn({ content: \"请输入合法手机号！\" });\n            return;\n        } else if (searchContact === WebIM.conn.user) {\n            message.warn({ content: \"不可以添加自己为好友哦\" });\n            setSearchContact(\"\");\n            return\n        } else if (contactsList.indexOf(searchContact) > -1) {\n            message.warn({ content: \"不能重复添加好友哦\" });\n            setSearchContact(\"\");\n            return\n        }\n        WebIM.conn.addContact(searchContact);\n        setSearchContact(\"\");\n        showAddDialog && addContactEle && addContactEle.current.focus();\n        setShowTips(true);\n        setTimeout(() => {\n            setShowTips(false);\n        }, 2000)\n    }\n\n    //todo 点击聊天Icon,发起聊天\n    const startChat = (uid) => {\n        navigate(`/main/contacts/chat/${uid}`)\n    }\n\n    //删除联系人\n    const deleteContact = (uid) => {\n        WebIM.conn.deleteContact(uid);\n    }\n    //同意、拒绝添加联系人\n    const handleApply = (operation, uid) => {\n        if (operation === 'accept') {\n            WebIM.conn.acceptContactInvite(uid);\n        } else {\n            WebIM.conn.declineContactInvite(uid);\n            let applyList = [...applyInfo];\n            const index = applyList.indexOf(uid);\n            if (index > -1) {\n                applyList.splice(index, 1);\n                setApplyInfo(applyList);\n            }\n            message.warn({ content: \"已拒绝申请\" });\n        }\n    }\n\n    const [hoverContactUid, setHoverContactUid] = useState('');\n    const handlerContactHover = (uid) => {\n        setHoverContactUid(uid)\n    }\n    const [hoverSearchUid, setHoverSearchUid] = useState('');\n    const handlerSearchHover = (uid) => {\n        setHoverSearchUid(uid)\n    }\n    const [hasFocus, setHasFocus] = useState(false);\n    const changeBorder = (flag) => {\n        setHasFocus(flag)\n    }\n\n    return (\n        <div className={s.main}>\n            <div className={s.top}>\n                <div className={s.left}>\n                    <Icon name=\"person_2\" size=\"26px\" />\n                    <span className={s.contactsText}>我的好友</span>\n                    <div className={s.buttonCon}>\n                        <div className={`${s.button} ${tab === \"online\" ? s.selected : null}`} onClick={() => { setTab('online') }}>在线</div>\n                        <div className={`${s.button} ${tab === \"all\" ? s.selected : null}`} onClick={() => { setTab('all') }}>全部</div>\n                        <div className={`${s.button} ${tab === \"request\" ? s.selected : null}`} onClick={() => { setTab('request') }}>好友申请\n                            {applyInfo.length > 0 && tab !== \"request\" && <span className={s.new}></span>}\n                        </div>\n                    </div>\n                    <Popover overlayClassName={s.searchResultPop}\n                        placement=\"bottomLeft\"\n                        trigger=\"click\"\n                        visible={visible}\n                        onVisibleChange={handleVisibleChange}\n                        content={<SearchResult\n                            visible={visible}\n                            appUserInfo={appUserInfo}\n                            searchList={searchList}\n                            hoverSearchUid={hoverSearchUid}\n                            onHover={handlerSearchHover}\n                            onChat={startChat}\n                            onDelete={deleteContact} />}>\n                        <div className={`${s.searchCon} ${hasFocus ? s.hasBorder : null}`}>\n                            <Icon name=\"magnify\" size=\"18px\" color=\"#BDBDBD\" iconClass={s.searchIcon} />\n                            <input className={s.searchInput} value={searchValue} onChange={(e) => changeSearchValue(e)} placeholder={'搜索我的好友'}\n                                onFocus={() => { changeBorder(true) }}\n                                onBlur={() => { changeBorder(false) }}\n                            ></input>\n                            {searchValue !== \"\" && <span className={s.closeIconCon} onClick={(e) => { e.stopPropagation();setSearchValue(\"\") }}><Icon name=\"xmark_in_circle\" size=\"20px\" color=\"#BDBDBD\" iconClass={s.deleteIcon} /></span>}\n                        </div>\n                    </Popover>\n                </div>\n                <div className={s.rightCon}>\n                    <div className={`circleBtn ${s.right}`} onClick={() => setShowAddDialog(true)}>\n                        <span className={s.addIcon}><Icon name=\"add_in_circle\" size=\"22px\" /></span>\n                        <span className={s.addText}>添加好友</span>\n                    </div>\n                </div>\n            </div>\n            {tab === \"request\" ?\n                <div className={s.content}>\n                    {applyInfo.length > 0 ? applyInfo.map((item) => {\n                        return (\n                            <MemberItem info={appUserInfo[item]} uid={item} key={item} operationReactNode={<div className={s.applyOperation}>\n                                <div className={`circleBtn66 circleBtnGray`} onClick={() => { handleApply('refuse', item) }}>拒绝</div>\n                                <div className={`circleBtn66 circleBtn ${s.acceptButton}`} onClick={() => { handleApply('accept', item) }}>接受</div>\n                            </div>} />\n                        )\n                    }) : emptyDom(\"没有待处理的好友申请\")}\n                </div> :\n                <div className={s.content}>\n                    {showList.length > 0 ? showList.map((item) => {\n                        return (\n                            <ContactEl\n                                source=\"list\"\n                                visible={visible}\n                                key={item} uid={item}\n                                userInfo={appUserInfo[item]}\n                                onChat={startChat}\n                                onDelete={deleteContact}\n                                hoverContactUid={hoverContactUid}\n                                onHoverFn={handlerContactHover} />\n                        )\n                    }) : emptyDom(\"您还没有好友\")}\n                </div>}\n            {showAddDialog && <div className={s.addContact}>\n                <div className={s.dialog}>\n                    <div className={s.title}>\n                        <span>添加好友</span>\n                        <span className={s.titleClose} onClick={() => setShowAddDialog(false)}>\n                            <Icon name=\"xmark\" color=\"#c7c7c7\" size=\"18px\" />\n                        </span>\n                    </div>\n                    <div className={s.searchId}>\n                        <input ref={addContactEle} className={s.searchInput2} value={searchContact} onChange={(e) => changeSearchContact(e)} placeholder={'输入环信ID'}></input>\n                        <div className={`circleBtn106 circleBtn ${s.searchButton}  ${searchContact === \"\" ? \"disable\" : null}`} onClick={addContact}>发送好友请求</div>\n                    </div>\n                    {showTips && <div className={s.tips}>您的好友请求已发送</div>}\n                </div>\n            </div>}\n\n        </div>\n    );\n};\n\nconst SearchResult = (props) => {\n    const { searchList, onChat, onDelete, hoverSearchUid, onHover, appUserInfo, visible } = props;\n    return (\n        <div className={s.searchResult}>\n            {searchList.length > 0 ? <div className={s.searchResultList}>\n                {searchList.map((item) => {\n                    return (\n                        <ContactEl\n                            source=\"search\"\n                            visible={visible}\n                            key={item}\n                            uid={item}\n                            userInfo={appUserInfo[item]}\n                            onChat={onChat}\n                            onDelete={onDelete}\n                            hoverSearchUid={hoverSearchUid}\n                            onHoverFn={onHover} />\n                    )\n                })}\n            </div> : <div className={s.noResult}>没有结果</div>}\n            { }\n        </div>\n    )\n}\n//common \nconst ContactEl = (props) => {\n    const { source, uid, userInfo, onChat, onDelete, hoverContactUid, hoverSearchUid, onHoverFn } = props\n    const memberParent = createRef();\n    return (\n        <MemberItem info={userInfo} key={uid} uid={uid} handlerHover={onHoverFn} basicShowOnline={true} operationReactNode={<div className={s.operation} ref={memberParent}>\n            <Tooltip title=\"消息\" overlayClassName=\"toolTip\">\n                <span className={`opBg ${s.chat} ${((hoverContactUid === uid && source === \"list\") || (hoverSearchUid === uid && source === \"search\")) ? s.focus : null}`} onClick={() => onChat(uid)}>\n                    <span className={s.chatIcon}><Icon name=\"message_retangle\" size=\"22px\" iconClass='opIcon' /></span>\n                </span>\n            </Tooltip>\n            <Dropdown overlay={menu(uid, onDelete)} placement=\"bottomRight\" trigger={['click']} overlayClassName=\"circleDropDown\"\n                getPopupContainer={() =>\n                    memberParent.current ? memberParent.current : document.body\n                }>\n                <span className={`opBg ${s.delete} ${((hoverContactUid === uid && source === \"list\") || (hoverSearchUid === uid && source === \"search\")) ? s.focus : null}`}>\n                    <span className={s.deleteIcon}><Icon name=\"ellipsis\" size=\"22px\" iconClass='opIcon'/></span>\n                </span>\n            </Dropdown>\n        </div>} />\n    )\n}\n\nconst mapStateToProps = ({ app, contact }) => {\n    return {\n        appUserInfo: app.appUserInfo,\n        applyInfo: contact.applyInfo,\n        contactsList: contact.contactsList,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setContactsList: (params) => {\n            return dispatch({\n                type: \"contact/setContactsList\",\n                payload: params\n            });\n        },\n        setApplyInfo: (params) => {\n            return dispatch({\n                type: \"contact/setApplyInfo\",\n                payload: params\n            });\n        },\n    };\n};\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(ContactsOperation));\n\n"],"names":["BasicInfo","props","online","name","showOnline","className","style","memo","MemberItem","info","uid","operationReactNode","handlerHover","borderType","basicShowOnline","memberItemRef","useRef","useState","selected","setSelected","useEffect","onClick","e","dom","current","contains","target","document","addEventListener","removeEventListener","s","onMouseOver","onMouseLeave","AvatarInfo","nickname","src","avatarurl","ref","menu","onDelete","items","key","label","Icon","size","iconClass","emptyDom","txt","SearchResult","searchList","onChat","hoverSearchUid","onHover","appUserInfo","visible","length","map","item","ContactEl","source","userInfo","onHoverFn","hoverContactUid","memberParent","createRef","title","overlayClassName","overlay","placement","trigger","getPopupContainer","body","connect","app","contact","applyInfo","contactsList","dispatch","setContactsList","params","type","payload","setApplyInfo","navigate","useNavigate","WebIM","then","res","data","getUsersInfo","tab","setTab","showList","setShowList","onLineList","filter","searchValue","setSearchValue","setSearchList","replace","list","forEach","toLowerCase","indexOf","toLocaleLowerCase","push","handleVisibleChange","setVisible","showAddDialog","setShowAddDialog","addContactEle","focus","searchContact","setSearchContact","showTips","setShowTips","startChat","deleteContact","handleApply","operation","applyList","index","splice","message","content","setHoverContactUid","handlerContactHover","setHoverSearchUid","hasFocus","setHasFocus","changeBorder","flag","onVisibleChange","color","value","onChange","changeSearchValue","placeholder","onFocus","onBlur","stopPropagation","changeSearchContact","test","setTimeout"],"sourceRoot":""}