{"version":3,"file":"static/js/752.68e13dba.chunk.js","mappings":"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","sources":["webpack://circle/./src/components/CloseIcon/index.module.less?1ca7","components/CloseIcon/index.js","webpack://circle/./src/layout/UserInfo/index.module.less?91a7","webpack://circle/./src/layout/UserInfo/SideBar/index.module.less?0e59","webpack://circle/./src/components/UploadImg/index.module.less?c4b7","components/UploadImg/index.js","layout/UserInfo/SideBar/index.js","webpack://circle/./src/views/UserInfo/index.module.less?7547","views/UserInfo/index.js","layout/UserInfo/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"close\":\"index_close__A4OxI\"};","import React, { memo } from \"react\";\nimport Icon from \"../Icon\";\nimport s from './index.module.less'\n\nconst CloseIcon = () => {\n    return (\n        <span className={s.close}>\n            <Icon name=\"xmark\" color=\"#C7C7C7\" size=\"18px\" />\n        </span>\n    );\n};\n\nexport default memo(CloseIcon);\n","// extracted by mini-css-extract-plugin\nexport default {\"userInfo\":\"index_userInfo__UPZsC\"};","// extracted by mini-css-extract-plugin\nexport default {\"sideBarWrap\":\"index_sideBarWrap__u3s9J\",\"info\":\"index_info__cc8EU\",\"avatar\":\"index_avatar__7dEXf\",\"cover\":\"index_cover__hQjOa\",\"edit\":\"index_edit__ehU8A\",\"nickname\":\"index_nickname__TZwWn\",\"uid\":\"index_uid__XKvmx\",\"operationList\":\"index_operationList__qtti5\",\"operationItem\":\"index_operationItem__H6a2n\",\"userInfo\":\"index_userInfo__vxx1Y\",\"text\":\"index_text__IWpO3\",\"logout\":\"index_logout__T1FsX\",\"logoutIcon\":\"index_logoutIcon__kn-li\",\"logoutText\":\"index_logoutText__OCPQI\",\"logoutCon\":\"index_logoutCon__YqWQ3\",\"content\":\"index_content__3qp8v\",\"buttons\":\"index_buttons__QMNO7\",\"confirm\":\"index_confirm__nYc+P\"};","// extracted by mini-css-extract-plugin\nexport default {\"confirmBtn\":\"index_confirmBtn__JyQ1g\"};","import React, { memo } from \"react\";\nimport { Upload } from \"antd\";\nimport ImgCrop from \"antd-img-crop\";\nimport WebIM from \"@/utils/WebIM\";\nimport s from \"./index.module.less\";\nimport lrz from \"lrz\";\n\nconst ConfirmBtn = () => {\n  return <div className={`circleBtn ${s.confirmBtn}`}>确认</div>;\n};\nconst CancelBtn = () => {\n  return <div className={`circleBtnGray ${s.confirmBtn}`}>取消</div>;\n};\n\nconst UploadEl = (props) => {\n  const { update, innerNode } = props;\n  const beforeCheck = (file, fileList = []) => {\n    return new Promise(async (resolve) => {\n      try {\n        let rst = await lrz(file);\n        resolve(rst.file);\n      } catch (error) {\n        throw Error(error);\n      }\n    });\n  };\n  const onChange = ({ fileList: newFileList }) => {\n    const fileObj = newFileList[0];\n    let imgUrl = \"\";\n    if (\n      fileObj.status === \"done\" &&\n      fileObj.response.entities &&\n      fileObj.response.entities[0]\n    ) {\n      imgUrl = fileObj.response.uri + \"/\" + fileObj.response.entities[0].uuid;\n      update(imgUrl);\n    }\n  };\n\n  const uploadProps = {\n    showUploadList: false,\n    maxCount: 1,\n    action: `${WebIM.conn.apiUrl}/${WebIM.conn.orgName}/${WebIM.conn.appName}/chatfiles`,\n    onChange: onChange,\n    beforeUpload: beforeCheck\n  };\n  return (\n    <div>\n      <ImgCrop\n        modalTitle={\"上传头像\"}\n        modalWidth={960}\n        modalHeight={572}\n        modalOk={<ConfirmBtn />}\n        modalCancel={<CancelBtn/>}\n        quality={0.2}\n        maxZoom={2}\n      >\n        <Upload {...uploadProps}>{innerNode}</Upload>\n      </ImgCrop>\n    </div>\n  );\n};\n\nexport default memo(UploadEl);\n","import React, { memo, useState } from \"react\";\nimport s from \"./index.module.less\";\nimport AvatarInfo from \"@/components/AvatarInfo\";\nimport { connect } from \"react-redux\";\nimport WebIM from \"@/utils/WebIM\";\nimport { Modal, message } from \"antd\";\nimport UploadImg from \"@/components/UploadImg\";\nimport Icon from \"@/components/Icon\";\nimport CloseIcon from \"@/components/CloseIcon\";\nimport { resetFrequentlyEmoji } from \"@/utils/common\";\n\nconst operationList = [\n  {\n    op: \"userInfo\",\n    title: \"个人资料\",\n    iconName: \"person_normal\"\n  }\n];\n\nconst SideBar = (props) => {\n  const { userInfo, setUserInfo, appUserInfo, setAppUserInfo } = props;\n  //退出登录\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    WebIM.conn.close();\n    setIsModalVisible(false);\n    resetFrequentlyEmoji();\n    window.location.href = \"/\";\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  //修改头像\n  const onChange = (url) => {\n    WebIM.conn\n      .updateUserInfo({ avatarurl: url })\n      .then((res) => {\n        setUserInfo(\n          Object.assign({ ...userInfo }, { avatarurl: res.data.avatarurl })\n        );\n        setAppUserInfo({\n          ...appUserInfo,\n          [userInfo.username]: {\n            ...appUserInfo[userInfo.username],\n            ...res.data\n          }\n        });\n      })\n      .catch((e) => {\n        message.warn({ content: \"头像修改失败，请重试！\" });\n      });\n  };\n  return (\n    <div className={s.sideBarWrap}>\n      <div className={s.info}>\n        <div className={s.avatar}>\n          <UploadImg\n            update={onChange}\n            innerNode={\n              <div>\n                <AvatarInfo size={90} src={userInfo.avatarurl} />\n                <div className={s.cover}></div>\n                <span className={s.edit}>\n                  <Icon name=\"pencil\" size=\"32px\" color=\"#fff\" />\n                </span>\n              </div>\n            }\n          ></UploadImg>\n        </div>\n        <span className={s.nickname}>\n          {userInfo.nickname || userInfo.username}\n        </span>\n        <span className={s.uid}>环信ID：{userInfo.username}</span>\n        <div className={s.operationList}>\n          {operationList.length > 0 &&\n            operationList.map((item) => {\n              return (\n                <div className={s.operationItem} key={item}>\n                  <span className={`${s[item.op]}`}>\n                    <Icon name={item.iconName} size=\"24px\" />\n                  </span>\n                  <span className={s.text}>{item.title}</span>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n      <div className={s.logout} onClick={showModal}>\n        <span className={s.logoutIcon}>\n          <Icon name=\"door\" size=\"22px\" />\n        </span>\n        <span className={s.logoutText}>退出登录</span>\n      </div>\n      <Modal\n        className={`logoutModal`}\n        title=\"退出登录\"\n        width={546}\n        destroyOnClose={true}\n        maskClosable={false}\n        visible={isModalVisible}\n        onCancel={handleCancel}\n        footer={null}\n        closeIcon={<CloseIcon />}\n      >\n        <div className={s.logoutCon}>\n          <span className={s.content}>确认退出吗？下次见哦！</span>\n          <div className={s.buttons}>\n            <div\n              className={`circleBtn106 circleBtnGray`}\n              onClick={handleCancel}\n            >\n              取消\n            </div>\n            <div\n              className={`circleBtn106 circleBtn ${s.confirm}`}\n              onClick={handleOk}\n            >\n              确认\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\nconst mapStateToProps = ({ app }) => {\n  return {\n    userInfo: app.userInfo,\n    appUserInfo: app.appUserInfo\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUserInfo: (params) => {\n      return dispatch({\n        type: \"app/setUserInfo\",\n        payload: params\n      });\n    },\n    setAppUserInfo: (params) => {\n      return dispatch({\n        type: \"app/setAppUserInfo\",\n        payload: params\n      });\n    }\n  };\n};\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(SideBar));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index_container__72Ty7\",\"header\":\"index_header__v8p8u\",\"icon\":\"index_icon__LuQ49\",\"text\":\"index_text__CffCe\",\"main\":\"index_main__GlhNZ\",\"item\":\"index_item__fzLsY\",\"nameLeft\":\"index_nameLeft__2+pfD\",\"nickname\":\"index_nickname__FxKG-\",\"edit\":\"index_edit__Unt24\",\"updateNickname\":\"index_updateNickname__ffDbL\",\"title\":\"index_title__PDUo9\",\"updateCon\":\"index_updateCon__3mMdC\",\"input\":\"index_input__5LI3o\",\"count\":\"index_count__35k-m\",\"confirm\":\"index_confirm__iWapD\"};","import React, { memo, useEffect, useState, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport s from \"./index.module.less\";\nimport { Modal, message } from 'antd';\nimport WebIM from \"@/utils/WebIM\";\nimport Icon from \"@/components/Icon\";\nimport CloseIcon from \"@/components/CloseIcon\";\n\nconst UserInfo = (props) => {\n    const { userInfo, setUserInfo, appUserInfo, setAppUserInfo } = props\n    const nicknameRef = createRef();\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const showModal = () => {\n        setIsModalVisible(true);\n        setNameValue(userInfo?.nickname || '');\n    };\n\n    useEffect(() => {\n        setTimeout(() => {\n            isModalVisible && nicknameRef?.current && nicknameRef.current.focus();\n        },0)\n    }, [isModalVisible, nicknameRef])\n    useEffect(() => {\n        localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\n    }, [userInfo])\n\n    const handleOk = () => {\n        if (nameValue === \"\") return;\n        WebIM.conn.updateUserInfo({ nickname: nameValue }).then(res => {\n            setUserInfo(Object.assign({ ...userInfo }, res.data));\n            setAppUserInfo({ ...appUserInfo, [userInfo.username]: { ...appUserInfo[userInfo.username], ...res.data } });\n        }).catch(e => {\n            message.warn({ content: \"昵称修改失败，请重试！\" });\n        })\n        setNameValue(\"\");\n        setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    const [nameValue, setNameValue] = useState('');\n    const changeNickname = (e) => {\n        setNameValue(e.target.value);\n    }\n    \n    return (\n        <div className={s.container}>\n            <div className={s.header}>\n                <span className={s.icon}>\n                    <Icon name=\"person_normal\" size=\"24px\" />\n                </span>\n                <span className={s.text}>个人资料</span>\n            </div>\n            <div className={s.main}>\n                <div className={s.item}>\n                    <div className={s.info}>\n                        <span className={s.nameLeft}>我的昵称</span>\n                        <span className={s.nickname}>{userInfo.nickname || userInfo.username}</span>\n                    </div>\n                    <div className={s.edit} onClick={showModal}>编辑</div>\n                </div>\n            </div>\n\n            <Modal className={`userInfoModal`} destroyOnClose={true} title=\"更改昵称\" visible={isModalVisible} onCancel={handleCancel} footer={null} closeIcon={<CloseIcon />}>\n                <div className={s.updateNickname}>\n                    <span className={s.title}>昵称</span>\n                    <div className={s.updateCon}>\n                        <input ref={nicknameRef} className={s.input} value={nameValue} maxLength={16} onChange={(e) => changeNickname(e)} placeholder=\"请输入昵称\"></input>\n                        <span className={s.count}>{nameValue.length}/16</span>\n\n                    </div>\n                    <div className={`circleBtn circleBtn106 ${s.confirm} ${nameValue === \"\" ? \"disable\" : null}`} onClick={handleOk}>确认</div>\n                </div>\n            </Modal>\n        </div>\n    );\n};\nconst mapStateToProps = ({ app }) => {\n    return {\n        userInfo: app.userInfo,\n        appUserInfo: app.appUserInfo,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserInfo: (params) => {\n            return dispatch({\n                type: \"app/setUserInfo\",\n                payload: params\n            });\n        },\n        setAppUserInfo: (params) => {\n            return dispatch({\n                type: \"app/setAppUserInfo\",\n                payload: params\n            });\n        },\n    };\n};\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(UserInfo));\n","import React, { memo } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport s from \"./index.module.less\";\nimport SideBar from \"./SideBar\";\nimport UserInfo from \"@/views/UserInfo\";\n\nconst Content = (props) => {\n  return (\n    <div className={s.userInfo}>\n      <SideBar />\n      <UserInfo />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default memo(Content);\n\n"],"names":["CloseIcon","className","s","Icon","name","color","size","memo","ConfirmBtn","CancelBtn","UploadEl","props","update","innerNode","uploadProps","showUploadList","maxCount","action","WebIM","onChange","fileObj","fileList","imgUrl","status","response","entities","uri","uuid","beforeUpload","file","Promise","resolve","lrz","rst","Error","modalTitle","modalWidth","modalHeight","modalOk","modalCancel","quality","maxZoom","operationList","op","title","iconName","connect","app","userInfo","appUserInfo","dispatch","setUserInfo","params","type","payload","setAppUserInfo","useState","isModalVisible","setIsModalVisible","handleCancel","UploadImg","url","avatarurl","then","res","Object","assign","data","username","catch","e","message","content","AvatarInfo","src","nickname","length","map","item","onClick","width","destroyOnClose","maskClosable","visible","onCancel","footer","closeIcon","resetFrequentlyEmoji","window","location","href","nicknameRef","createRef","useEffect","setTimeout","current","focus","localStorage","setItem","JSON","stringify","nameValue","setNameValue","ref","value","maxLength","target","changeNickname","placeholder","Content"],"sourceRoot":""}