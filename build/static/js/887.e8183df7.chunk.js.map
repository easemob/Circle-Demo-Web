{"version":3,"file":"static/js/887.e8183df7.chunk.js","mappings":"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","sources":["webpack://circle/./src/layout/Server/index.module.less?96f6","webpack://circle/./src/layout/Server/SideBar/index.module.less?d071","layout/Server/SideBar/index.js","webpack://circle/./src/views/ServerSquare/index.module.less?eada","utils/axios.js","views/ServerSquare/index.js","layout/Server/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contentWrap\":\"index_contentWrap__yXysN\"};","// extracted by mini-css-extract-plugin\nexport default {\"sideBarWrap\":\"index_sideBarWrap__850iF\",\"title\":\"index_title__CjdD8\",\"icon\":\"index_icon__kjo7s\",\"text\":\"index_text__yFIwT\",\"menuList\":\"index_menuList__fui55\",\"menuItem\":\"index_menuItem__55Mw-\"};","import React, { memo } from \"react\";\nimport s from \"./index.module.less\";\nimport Icon from \"@/components/Icon\";\n\nconst SideBar = () => {\n  return <div className={s.sideBarWrap}>\n    <div className={s.title}>\n      <Icon name=\"square_4\" size=\"24px\" iconClass={s.icon} />\n      <span className={s.text}>广场</span>\n    </div>\n    <div className={s.menuList}>\n      <div className={s.menuItem}>\n        <Icon name=\"point_9\" size=\"24px\" iconClass={s.icon} />\n        <span className={s.text}>全部分类</span>\n      </div>\n    </div>\n  </div>;\n};\n\nexport default memo(SideBar);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index_container__IAJ0-\",\"title\":\"index_title__KYTEV\",\"welcome\":\"index_welcome__EYG+2\",\"text\":\"index_text__n9sFM\",\"search\":\"index_search__aa8d8\",\"searchInputCon\":\"index_searchInputCon__xNmRG\",\"searchInput\":\"index_searchInput__6iGKS\",\"empty\":\"index_empty__Qcy8d\",\"searchBtn\":\"index_searchBtn__HcWKq\",\"main\":\"index_main__hwhE4\",\"serverList\":\"index_serverList__4HtUa\",\"serverItem\":\"index_serverItem__xwvS9\",\"serverInfo\":\"index_serverInfo__MIvVl\",\"avatar\":\"index_avatar__BgoDF\",\"name\":\"index_name__ogqg1\",\"des\":\"index_des__XW78I\",\"tags\":\"index_tags__TRtpM\",\"tag\":\"index_tag__uD8oq\",\"tagText\":\"index_tagText__2T5f3\"};","/**\n * 网络请求配置\n */\nimport axios from \"axios\";\nimport store from \"../store\";\nconst { getState } = store;\nconst token = getState().app.userInfo.accessToken;\n\naxios.defaults.timeout = 100000;\n\n/**\n * http request 拦截器\n */\naxios.interceptors.request.use(\n    (config) => {\n        config.data = JSON.stringify(config.data);\n        config.headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`,\n        };\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n/**\n * http response 拦截器\n */\naxios.interceptors.response.use(\n    (response) => {\n        if (response.data.errCode === 2) {\n            console.log(\"过期\");\n        }\n        return response;\n    },\n    (error) => {\n        console.log(\"请求出错：\", error);\n    }\n);\n\n/**\n * 封装get方法\n * @param url  请求url\n * @param params  请求参数\n * @returns {Promise}\n */\nexport function get(url, params = {}) {\n    return new Promise((resolve, reject) => {\n        axios.get(url, {\n            params: params,\n        }).then((response) => {\n            landing(url, params, response.data);\n            resolve(response.data);\n        })\n            .catch((error) => {\n                reject(error);\n            });\n    });\n}\n\n/**\n * 封装post请求\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function post(url, data) {\n    return new Promise((resolve, reject) => {\n        axios.post(url, data).then(\n            (response) => {\n                resolve(response.data);\n            },\n            (err) => {\n                reject(err);\n            }\n        );\n    });\n}\n\n//统一接口处理，返回数据\nexport default function http(method, url, param) {\n    return new Promise((resolve, reject) => {\n        switch (method) {\n            case \"get\":\n                get(url, param)\n                    .then(function (response) {\n                        resolve(response);\n                    })\n                    .catch(function (error) {\n                        reject(error);\n                    });\n                break;\n            case \"post\":\n                post(url, param)\n                    .then(function (response) {\n                        resolve(response);\n                    })\n                    .catch(function (error) {\n                        reject(error);\n                    });\n                break;\n            default:\n                break;\n        }\n    });\n}\n\n\n/**\n * 查看返回的数据\n * @param url\n * @param params\n * @param data\n */\nfunction landing(url, params, data) {\n    if (data.code === -1) {\n    }\n}\n\n","import React, { memo, useEffect, useState, useRef, useCallback } from \"react\";\nimport s from \"./index.module.less\";\nimport WebIM from \"@/utils/WebIM\";\nimport { Card, List, message, Modal } from 'antd';\nimport AvatarInfo from \"@/components/AvatarInfo\";\nimport InviteModal from \"@/components/InviteModal\"\nimport Icon from \"@/components/Icon\";\nimport http from \"@/utils/axios\"\nimport { getConfirmModalConf, insertServerList, getServerCover } from \"@/utils/common\";\nimport { useNavigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nconst EnterKeyCode = 13;\n\nconst ServerSquare = (props) => {\n    const { setServerRole } = props;\n    const navigate = useNavigate();\n    const searchEl = useRef(\"\");\n    const [serverList, setServerList] = useState([]);\n    const [showList, setShowList] = useState([]);\n    const [searchVal, setSearchVal] = useState('');\n    useEffect(() => {\n        if (searchVal === \"\") {\n            setShowList(serverList)\n        }\n    }, [serverList, searchVal])\n    useEffect(() => {\n        const { apiUrl, orgName, appName } = WebIM.conn;\n        http(\"get\", `${apiUrl}/${orgName}/${appName}/circle/server/recommend/list`).then(res => {\n            res.servers.length > 0 && res.servers.forEach((item) => {\n                item.id = item.server_id\n                item.tags.forEach((tag) => {\n                    tag.tagId = tag.server_tag_id;\n                    tag.tagName = tag.tag_name;\n                })\n            })\n            setServerList(res.servers);\n        }).catch((err) => {\n            console.log(\"获取社区推荐列表失败\", err)\n        })\n    }, [])\n    //搜索社区\n    const setSearchServer = (e) => {\n        setSearchVal(e.target.value)\n    }\n    const emptyVal = () => {\n        setSearchVal(\"\");\n    }\n    const search = useCallback(() => {\n        if (searchVal === \"\") {\n            setServerList()\n            return\n        }\n        WebIM.conn.getServers({ keyword: searchVal }).then((res) => {\n            setShowList(res.data.list);\n        }).catch((err) => {\n            console.log(\"根据Server名称搜索失败\", err)\n        })\n    }, [searchVal])\n    //加入社区\n    const joinServer = (info) => {\n        const server_id = info.id || info.server_id;\n        const default_channel_id = info.defaultChannelId || info.default_channel_id;\n        //查询是否在server中\n        WebIM.conn.isInServer({ serverId: server_id }).then((res) => {\n            if (res.data.result) {\n                //路由跳转\n                navigate(`/main/channel/${server_id}/${default_channel_id}`);\n            } else {\n                const confirmJoinServer = (serverId) => {\n                    WebIM.conn.joinServer({ serverId }).then((res) => {\n                        console.log(\"加入Server成功\", res);\n                        //插入数据\n                        insertServerList(serverId, res.data)\n                        navigate(`/main/channel/${server_id}/${default_channel_id}`);\n                        WebIM.conn.getServerRole({ serverId }).then((res) => {\n                            setServerRole({ serverId, role: res.data.role });\n                        });\n                    }).catch((err) => {\n                        if (err.message === \"User is already in server.\") {\n                            message.warn({ content: \"已经在server了！\" });\n                        } else {\n                            message.warn({ content: \"加入失败，请重试！\" });\n                        }\n                    })\n                }\n                const conf = getConfirmModalConf({\n                    title: '',\n                    okText: \"立即加入\",\n                    cancelText: \"暂不加入\",\n                    content: <InviteModal serverId={server_id} isServerInvite={true} />,\n                    onOk: () => confirmJoinServer(server_id),\n                    onCancel: () => {\n                        console.log(\"close\")\n                    }\n                });\n                Modal.confirm(conf);\n            }\n        }).catch(() => {\n            message.warn({ content: \"查询失败，请重试！\" });\n        })\n\n    }\n\n    //键盘enter事件\n    const onKeyDown = useCallback(\n        (e) => {\n            if (e.keyCode === EnterKeyCode) {\n                e.preventDefault();\n                search();\n            }\n        },\n        [search]\n    );\n\n    //事件绑定\n    useEffect(() => {\n        searchEl.current.addEventListener(\"keydown\", onKeyDown);\n        return function cleanup() {\n            let _inputRef = searchEl;\n            _inputRef &&\n                _inputRef?.current?.removeEventListener(\"keydown\", onKeyDown);\n        };\n    }, [onKeyDown]);\n\n    return (\n        <div className={s.container}>\n            <div className={s.title}>\n                <div className={s.welcome}>\n                    <span className={s.text}>欢迎来到</span>\n                    <span className={s.text}>环信圈子</span>\n                </div>\n                <div className={s.search}>\n                    <div className={s.searchInputCon}>\n                        <input ref={searchEl} className={s.searchInput} placeholder=\"搜索社区\" value={searchVal} onChange={setSearchServer} />\n                        {searchVal !== \"\" && <span className={s.empty} onClick={emptyVal}>\n                            <Icon name=\"xmark_in_circle\" size=\"20px\" color=\"#e4e4e4\" />\n                        </span>}\n                    </div>\n                    <div className={`circleBtn66 circleBtn ${s.searchBtn}`} onClick={search}>搜索</div>\n                </div>\n            </div>\n            <div className={s.main}>\n                <List className={s.serverList}\n                    grid={{\n                        gutter: 12,\n                        xs: 2,\n                        sm: 2,\n                        md: 2,\n                        lg: 3,\n                        xl: 4,\n                        xxl: 5,\n                    }}\n                    dataSource={showList}\n                    renderItem={item => (\n                        <List.Item >\n                            <Card key={item.server_id} className={`${s.serverItem}`} style={{ backgroundImage: `url(${getServerCover(item.id)})` }} onClick={() => { joinServer(item) }}>\n                                <div className={s.serverInfo}>\n                                    <div className={s.avatar}>\n                                        <AvatarInfo size={48} isServer={true} src={item.icon_url} />\n                                    </div>\n                                    <div className={s.name}>{item.name}</div>\n                                    <div className={s.des}>{item.description || \"群主有点懒，就不写介绍。\"}</div>\n                                    <div className={s.tags}>\n                                        {item.tags && item.tags.length > 0 && item.tags.map((tag) => {\n                                            return (\n                                                <div className={s.tag} key={tag.tagId}>\n                                                    <Icon name=\"label\" color=\"rgba(255,255,255,.74)\" size=\"12px\" />\n                                                    <span className={s.tagText}>{tag.tagName}</span>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </Card>\n                        </List.Item>\n                    )}\n                />\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = ({ server }) => {\n    return {\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setServerRole: (params) => {\n            return dispatch({\n                type: \"app/setServerRole\",\n                payload: params,\n            })\n        },\n    };\n};\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(ServerSquare));\n","import React, { memo } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport s from \"./index.module.less\";\nimport SideBar from \"./SideBar\";\nimport ServerSquare from \"@/views/ServerSquare\"\n\nconst Content = () => {\n  return (\n    <div className={s.contentWrap}>\n      <SideBar />\n      <ServerSquare />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default memo(Content);\n"],"names":["SideBar","className","s","Icon","name","size","iconClass","memo","token","getState","store","app","userInfo","accessToken","http","method","url","param","Promise","resolve","reject","params","axios","then","response","landing","data","catch","error","get","err","post","code","config","JSON","stringify","headers","errCode","console","log","connect","server","dispatch","setServerRole","type","payload","props","navigate","useNavigate","searchEl","useRef","useState","serverList","setServerList","showList","setShowList","searchVal","setSearchVal","useEffect","WebIM","apiUrl","orgName","appName","res","servers","length","forEach","item","id","server_id","tags","tag","tagId","server_tag_id","tagName","tag_name","search","useCallback","keyword","list","joinServer","info","default_channel_id","defaultChannelId","serverId","result","conf","getConfirmModalConf","title","okText","cancelText","content","InviteModal","isServerInvite","onOk","insertServerList","role","message","onCancel","Modal","onKeyDown","e","keyCode","preventDefault","current","addEventListener","removeEventListener","ref","placeholder","value","onChange","target","onClick","color","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","style","backgroundImage","getServerCover","AvatarInfo","isServer","src","icon_url","description","map","Content"],"sourceRoot":""}