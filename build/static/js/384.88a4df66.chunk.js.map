{"version":3,"file":"static/js/384.88a4df66.chunk.js","mappings":"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","sources":["webpack://circle/./src/components/Emoji/index.module.less?6f40","components/Emoji/index.js","webpack://circle/./src/components/Input/index.module.less?9b42","components/Input/index.js","webpack://circle/./src/components/MessageLeft/index.module.less?8d77","webpack://circle/./src/components/TxtMsg/index.module.less?38e5","components/TxtMsg/index.js","webpack://circle/./src/components/FileMsg/index.module.less?2d67","components/FileMsg/index.js","webpack://circle/./src/components/ImgMsg/index.module.less?d456","components/ImgMsg/index.js","webpack://circle/./src/components/RecallMsg/index.module.less?a7e6","components/RecallMsg/index.js","webpack://circle/./src/components/CustomMsg/index.module.less?39af","components/CustomMsg/index.js","webpack://circle/./src/components/MsgOperation/index.module.less?4b1a","components/MsgOperation/index.js","webpack://circle/./src/components/ThreadMsg/index.module.less?d371","components/ThreadMsg/index.js","webpack://circle/./src/components/ReactionMsg/index.module.less?4f21","components/ReactionMsg/index.js","webpack://circle/./src/views/Channel/components/UserDetail/index.module.less?07d9","views/Channel/components/UserDetail/index.js","components/MessageLeft/index.js","utils/download.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"emojiWrap\":\"index_emojiWrap__+lPp+\",\"emojiContentWrap\":\"index_emojiContentWrap__zujpz\",\"allEmojiContent\":\"index_allEmojiContent__aY3Jk\",\"emojiItemWrap\":\"index_emojiItemWrap__z1+MV\",\"emoji\":\"index_emoji__aahSe\",\"emojiContent\":\"index_emojiContent__HfKOK\",\"freEmojiWrap\":\"index_freEmojiWrap__T4bju\",\"title\":\"index_title__igdQH\",\"emojiPopover\":\"index_emojiPopover__kwwu8\",\"active\":\"index_active__cyF3v\",\"normal\":\"index_normal__mwGUf\",\"icon\":\"index_icon__Hes4J\",\"emojiIconCon\":\"index_emojiIconCon__pF6Ey\",\"disable\":\"index_disable__97BrB\"};","import React, { useEffect, useRef, useState, memo } from \"react\";\nimport { Popover } from \"antd\";\nimport s from \"./index.module.less\";\nimport Icon from \"../Icon\";\nimport { emojiConfig, emojiMap } from \"@/consts/emoji\";\nimport { setFrequentlyEmoji } from \"@/utils/common\";\n\nconst EmojiPanel = ({ onSelect, showFrequently }) => {\n  const frequentlyEmoji =\n    JSON.parse(localStorage.getItem(\"frequentlyEmoji\")) || [];\n\n  return (\n    <div className={s.emojiContentWrap}>\n      <div className={s.emojiContent}>\n        {frequentlyEmoji.length ? (\n          showFrequently && (\n            <>\n              <div className={s.title}>常用</div>\n              <div className={s.freEmojiWrap}>\n                {frequentlyEmoji.map((id) => {\n                  return (\n                    <div className={s.emojiItemWrap} key={id}>\n                      <img\n                        className={s.emoji}\n                        width={20}\n                        height={20}\n                        key={id}\n                        src={emojiMap.get(id)}\n                        alt={id}\n                        onClick={() => {\n                          onSelect({\n                            id: id\n                          });\n                        }}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              <div className={s.title}>全部表情</div>\n            </>\n          )\n        ) : (\n          <></>\n        )}\n        <div className={s.allEmojiContent}>\n          {emojiConfig.emojis.map((item) => {\n            return (\n              <div className={s.emojiItemWrap} key={item.id}>\n                <img\n                  className={s.emoji}\n                  width={20}\n                  height={20}\n                  key={item.id}\n                  src={item.src}\n                  alt={item.id}\n                  onClick={() => {\n                    onSelect(item);\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nconst EmojiPicker = (props) => {\n  const [emojiVisible, setEmojiVisible] = useState(false);\n  const { showFrequently = false, emojiIcon = \"emoji_plus\", disabled = false } = props;\n\n  const wrapRef = useRef();\n\n  const onSelect = (e) => {\n    showFrequently && setFrequentlyEmoji(e.id);\n    props?.onEmojiSelect(e);\n    setEmojiVisible(false);\n  };\n\n  useEffect(() => {\n    let onClick = (e) => {\n      let dom = wrapRef.current;\n      if (dom) {\n        // 如果点击的区域不在自定义dom范围\n        if (!dom.contains(e.target)) {\n          setEmojiVisible(false);\n        }\n      }\n    };\n    document.addEventListener(\"click\", onClick);\n    return () => {\n      document.removeEventListener(\"click\", onClick);\n    };\n  }, []);\n\n  return (\n    <div ref={wrapRef} className={s.emojiWrap}>\n      <div>\n        <Popover\n          content={\n            <EmojiPanel showFrequently={showFrequently} onSelect={onSelect} />\n          }\n          trigger=\"click\"\n          visible={emojiVisible && !disabled}\n          destroyTooltipOnHide={{ keepParent: false }}\n          overlayClassName={s.emojiPopover}\n          placement=\"bottomRight\"\n        >\n          <div\n            className={`${s.emojiIconCon}  ${disabled ? s.disable : null}`}\n            onClick={() => {\n              setEmojiVisible(!emojiVisible);\n            }}\n          >\n            {props.children || (\n              <Icon\n                size={emojiIcon === \"emoji_plus\" ? \"22px\" : \"30px\"}\n                iconClass={\n                  emojiVisible\n                    ? `${s.icon} ${s.active}`\n                    : `${s.icon} ${s.normal}`\n\n                }\n                name={emojiIcon}\n              />\n            )}\n          </div>\n        </Popover>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"controlWrap\":\"index_controlWrap__X1y6N\",\"cannotSend\":\"index_cannotSend__1iCdG\",\"editableContainer\":\"index_editableContainer__UzgCM\",\"IconCon\":\"index_IconCon__ANkvM\",\"icon\":\"index_icon__d8ooF\",\"optWrap\":\"index_optWrap__7iLim\",\"emojiMsg\":\"index_emojiMsg__v0p+F\",\"inputWrap\":\"index_inputWrap__khdCG\",\"upload\":\"index_upload__6a2vq\"};","import React, { useRef, useState, memo, useEffect, useCallback } from \"react\";\nimport ContentEditable from \"react-contenteditable\";\nimport s from \"./index.module.less\";\nimport { Dropdown, Menu, Upload, message } from \"antd\";\nimport {\n  scrollToBottom,\n  convertToMessage,\n  renderHtml,\n  getEmojiHtml\n} from \"@/utils/common\";\nimport { SCROLL_WARP_ID } from \"@/consts\";\nimport {\n  createMsg,\n  deliverMsg,\n  pasteHtmlAtCaret,\n  formatImFile\n} from \"@/utils/common\";\nimport { connect } from \"react-redux\";\nimport Icon from \"../Icon\";\nimport EmojiPicker from \"../Emoji\";\nimport WebIM from \"@/utils/WebIM\";\n\nconst EnterKeyCode = 13;\n\nconst scrollBottom = () => {\n  setTimeout(() => {\n    scrollToBottom(document.getElementById(SCROLL_WARP_ID));\n  }, 300);\n};\n\nconst Input = (props) => {\n  const {\n    insertChatMessage,\n    fromId,\n    chatType,\n    isThread,\n    isCreatingThread,\n    threadName,\n    currentThreadInfo,\n    setThreadMessage\n  } = props;\n  const [text, setText] = useState(\"\");\n  const ref = useRef(\"\");\n  // 定义光标对象\n  const lastEditRangeRef = useRef();\n\n  const idRef = useRef(fromId);\n\n  const setLastRange = () => {\n    // 获取选定对象\n    let selection = getSelection();\n    // 设置最后光标对象\n    lastEditRangeRef.current = selection.getRangeAt(0);\n  };\n\n  const onChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const beforeUploadImg = async (file) => {\n    let resFile = file;\n    const getImgMsg = (target) => {\n      return createMsg({\n        chatType: chatType,\n        type: \"img\",\n        to: target,\n        isChatThread: props.isThread,\n        file: formatImFile(resFile),\n        onFileUploadError: function () {\n          // 消息上传失败\n          console.log(\"onFileUploadError\");\n        },\n        onFileUploadProgress: function (progress) {\n          // 上传进度的回调\n          console.log(progress);\n        },\n        onFileUploadComplete: function () {\n          // 消息上传成功\n          console.log(\"onFileUploadComplete\");\n        }\n      });\n    };\n    getTarget().then((target) => {\n      const imgMsg = getImgMsg(target);\n      // 发送图片消息\n      deliverMsg(imgMsg).then((res) => {\n        if (imgMsg.isChatThread) {\n          setThreadMessage({\n            message: { ...imgMsg, from: WebIM.conn.user },\n            fromId: target\n          });\n        } else {\n          insertChatMessage({\n            chatType,\n            fromId: target,\n            messageInfo: { list: [{ ...imgMsg, from: WebIM.conn.user }] }\n          });\n          scrollBottom();\n        }\n      });\n    });\n  };\n\n  const beforeUploadFile = (file) => {\n    const getFileMsg = (target) => {\n      return createMsg({\n        chatType: chatType,\n        type: \"file\",\n        to: target,\n        isChatThread: props.isThread,\n        file: formatImFile(file),\n        filename: file.name,\n        ext: {\n          file_length: file.size,\n          file_type: file.type\n        },\n        onFileUploadError: function () {\n          // 消息上传失败\n          console.log(\"onFileUploadError\");\n        },\n        onFileUploadProgress: function (progress) {\n          // 上传进度的回调\n          console.log(progress);\n        },\n        onFileUploadComplete: function () {\n          // 消息上传成功\n          console.log(\"onFileUploadComplete\");\n        }\n      });\n    };\n    getTarget().then((target) => {\n      const fileMsg = getFileMsg(target);\n      deliverMsg(fileMsg).then(() => {\n        if (fileMsg.isChatThread) {\n          setThreadMessage({\n            message: { ...fileMsg, from: WebIM.conn.user },\n            fromId: target\n          });\n        } else {\n          insertChatMessage({\n            chatType,\n            fromId: target,\n            messageInfo: {\n              list: [{ ...fileMsg, from: WebIM.conn.user }]\n            }\n          });\n          scrollBottom();\n        }\n      });\n    });\n  };\n\n  const menu = (\n    <Menu\n      items={[\n        {\n          key: \"img\",\n          label: (\n            <Upload\n              beforeUpload={beforeUploadImg}\n              accept=\"image/*\"\n              maxCount={1}\n              showUploadList={false}\n              className={s.upload}\n            >\n              <div className=\"circleDropItem\">\n                <Icon name=\"img\" size=\"24px\" iconClass=\"circleDropMenuIcon\" />\n                <span className=\"circleDropMenuOp\">发送图片</span>\n              </div>\n            </Upload>\n          )\n        },\n        {\n          key: \"file\",\n          label: (\n            <Upload\n              beforeUpload={beforeUploadFile}\n              accept=\"*\"\n              maxCount={1}\n              showUploadList={false}\n              className={s.upload}\n            >\n              <div className=\"circleDropItem\">\n                <Icon name=\"clip\" size=\"24px\" iconClass=\"circleDropMenuIcon\" />\n                <span className=\"circleDropMenuOp\">发送附件</span>\n              </div>\n            </Upload>\n          )\n        }\n      ]}\n    />\n  );\n\n  //创建thread，返回target\n  const getTarget = useCallback(() => {\n    return new Promise((resolve, reject) => {\n      if (isCreatingThread && isThread) {\n        //创建thread\n        if (!threadName) {\n          message.warn({ content: \"子区名称不能为空！\" });\n          return;\n        }\n        const options = {\n          name: threadName.replace(/(^\\s*)|(\\s*$)/g, \"\"),\n          messageId: currentThreadInfo.parentMessage.id,\n          parentId: idRef.current\n        };\n        WebIM.conn.createChatThread(options).then((res) => {\n          const threadId = res.data?.chatThreadId;\n          resolve(threadId);\n        });\n      } else if (isThread) {\n        //发送thread消息\n        resolve(currentThreadInfo.id);\n      } else {\n        //发送非thread消息\n        resolve(idRef.current);\n      }\n    });\n  }, [\n    currentThreadInfo?.id,\n    currentThreadInfo?.parentMessage?.id,\n    isCreatingThread,\n    isThread,\n    threadName\n  ]);\n\n  //发消息\n  const sendMessage = useCallback(() => {\n    if (!text) return;\n    getTarget().then((target) => {\n      let msg = createMsg({\n        chatType,\n        type: \"txt\",\n        to: target,\n        msg: convertToMessage(ref.current.innerHTML),\n        isChatThread: props.isThread\n      });\n      setText(\"\");\n      deliverMsg(msg).then(() => {\n        if (msg.isChatThread) {\n          setThreadMessage({\n            message: { ...msg, from: WebIM.conn.user },\n            fromId: target\n          });\n        } else {\n          insertChatMessage({\n            chatType,\n            fromId: target,\n            messageInfo: {\n              list: [{ ...msg, from: WebIM.conn.user }]\n            }\n          });\n          scrollBottom();\n        }\n      });\n    });\n  }, [text, props, getTarget, chatType, setThreadMessage, insertChatMessage]);\n\n  //键盘enter事件\n  const onKeyDown = useCallback(\n    (e) => {\n      if (e.keyCode === EnterKeyCode) {\n        e.preventDefault();\n        sendMessage();\n      }\n    },\n    [sendMessage]\n  );\n\n  const insertNode = (e) => {\n    pasteHtmlAtCaret(e, lastEditRangeRef?.current);\n  };\n\n  const onEmojiSelect = (e) => {\n    ref.current.focus();\n    let img = document.createElement(\"img\");\n    img.src = e.src;\n    insertNode(\n      getEmojiHtml({\n        src: e.src,\n        dataKey: e.id,\n        alt: e.id,\n        className: s.emojiMsg\n      })\n    );\n    setLastRange();\n    setText(ref.current.innerHTML);\n  };\n\n  const onPaste = useCallback((event) => {\n    let paste = (event.clipboardData || window.clipboardData).getData(\n      \"text/plain\"\n    );\n    ref.current.focus();\n    let html = renderHtml(paste);\n    insertNode(html);\n    setLastRange();\n    setText(ref.current.innerHTML);\n    event.preventDefault();\n  }, []);\n\n  //事件绑定\n  useEffect(() => {\n    ref.current.addEventListener(\"keydown\", onKeyDown);\n    return function cleanup() {\n      let _inputRef = ref;\n      _inputRef &&\n        _inputRef?.current?.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [onKeyDown]);\n\n  useEffect(() => {\n    idRef.current = fromId;\n  }, [fromId]);\n\n  useEffect(() => {\n    let dom = ref?.current;\n    ref?.current.addEventListener(\"paste\", onPaste);\n    return () => {\n      dom.removeEventListener(\"paste\", onPaste);\n    };\n  }, [onPaste]);\n\n  return (\n    <div className={`${s.controlWrap} ${threadName === \"\" ? s.cannotSend : null} `}>\n      <div className={s.editableContainer}>\n        <ContentEditable\n          innerRef={ref}\n          className={s.inputWrap}\n          html={text}\n          disabled={threadName === \"\"}\n          onDrop={(e) => {\n            e.preventDefault();\n          }}\n          onClick={() => {\n            setLastRange();\n          }}\n          onKeyUp={() => {\n            setLastRange();\n          }}\n          placeholder=\"发送消息\"\n          contentEditable=\"true\"\n          onChange={onChange}\n        />\n      </div>\n      <div className={s.optWrap}>\n        <EmojiPicker onEmojiSelect={onEmojiSelect} emojiIcon={\"emoji\"} disabled={threadName === \"\"} />\n        <Dropdown\n          overlay={menu}\n          placement=\"top\"\n          overlayClassName=\"circleDropDown\"\n          trigger=\"click\"\n          disabled={threadName === \"\"}\n        >\n          <div className={s.IconCon}>\n            <Icon iconClass={s.icon} name=\"add_in_circle\" />\n          </div>\n        </Dropdown>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ channel, thread }) => {\n  return {\n    currentThreadInfo: thread.currentThreadInfo,\n    isCreatingThread: thread.isCreatingThread\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    insertChatMessage: (params) => {\n      return dispatch({\n        type: \"app/insertChatMessage\",\n        payload: params\n      });\n    },\n    setThreadMessage: (params) => {\n      return dispatch({\n        type: \"thread/setThreadMessage\",\n        payload: params\n      });\n    }\n  };\n};\n\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(Input));\n","// extracted by mini-css-extract-plugin\nexport default {\"layout\":\"index_layout__wV4Cl\",\"selected\":\"index_selected__LKQMj\",\"message\":\"index_message__wCmJ1\",\"messageInfo\":\"index_messageInfo__WnNgs\",\"bar\":\"index_bar__edY7S\",\"operation\":\"index_operation__kRa9d\",\"avatar\":\"index_avatar__L5R3k\",\"l\":\"index_l__kW+f8\",\"name\":\"index_name__od6cM\",\"date\":\"index_date__+1qeD\",\"content\":\"index_content__Urdez\",\"channelUserInfo\":\"index_channelUserInfo__QU-b4\"};","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"index_main__lsgSD\",\"txt\":\"index_txt__mOpQN\"};","import s from \"./index.module.less\";\nimport React, { memo } from \"react\";\nimport { renderTxt } from \"@/utils/common\";\n\nconst TxtMsg = (props) => {\n  const { message } = props;\n  return (\n    <div className={s.main}>\n      <div className={s.txt}>{renderTxt(message.msg)}</div>\n    </div>\n  );\n};\n\nexport default memo(TxtMsg);\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"index_main__8fbAr\",\"fileCon\":\"index_fileCon__KNt8J\",\"flag\":\"index_flag__YdeOp\",\"info\":\"index_info__xXsPq\",\"fileName\":\"index_fileName__jN2to\",\"more\":\"index_more__3GKss\",\"size\":\"index_size__yJ0F8\",\"download\":\"index_download__J33wJ\",\"iconColor\":\"index_iconColor__tJudW\"};","import s from \"./index.module.less\";\nimport React, { memo } from \"react\";\nimport Icon from \"@/components/Icon\";\nimport download from \"@/utils/download\";\n\nconst FileMsg = (props) => {\n  const { message } = props;\n  //下载\n  const handleDownloadFile = () => {\n    fetch(message.url)\n      .then((res) => {\n        return res.blob();\n      })\n      .then((blob) => {\n        download(blob, message.filename);\n      })\n      .catch((err) => {\n        console.log(err)\n        return false;\n      })\n      .finally((res) => {\n        return true;\n      });\n  };\n  return (\n    <div className={s.main}>\n      <div className={s.fileCon}>\n        <div className={s.flag}>\n          <Icon name={\"file\"} size={\"42px\"} />\n        </div>\n        <div className={s.info}>\n          <div className={s.fileName}>{message.filename}</div>\n          <div className={s.more}>\n            {message?.ext?.file_length && (\n              <span className={s.size}>\n                {Math.floor(message?.ext?.file_length / 1024) + \"KB\"}\n              </span>\n            )}\n            <span className={s.download} onClick={handleDownloadFile}>\n              <Icon\n                name={\"arrow_down_in_box\"}\n                size={\"14px\"}\n                iconClass={s.iconColor}\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(FileMsg);\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"index_main__pP9Ot\",\"imgCon\":\"index_imgCon__gMxNI\",\"imgSrc\":\"index_imgSrc__S-w72\"};","import s from \"./index.module.less\";\nimport React, { memo } from \"react\";\nimport { Image } from \"antd\";\n\nconst ImgMsg = (props) => {\n  const { message } = props;\n  return (\n    <div className={s.main}>\n      <div className={s.imgCon}>\n        <Image src={`${message.url}?thumbnail=true`} placeholder={true}\n          preview={{\n            src: message.url,\n          }} />\n        {/* <img src={message.url} alt=\"\" className={s.imgSrc} /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ImgMsg);\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"index_main__1FFLF\",\"txt\":\"index_txt__vSko8\"};","import s from \"./index.module.less\";\nimport React, { memo } from \"react\";\n\nconst RecallMsg = (props) => {\n  const { message } = props;\n  return (\n    <div className={s.main}>\n      <div className={s.txt}>{message.msg}</div>\n    </div>\n  );\n};\n\nexport default memo(RecallMsg);\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"index_main__Y2Q+W\",\"canHover\":\"index_canHover__RxuBe\",\"custom\":\"index_custom__mtuBw\",\"iconCon\":\"index_iconCon__88MpN\",\"infoCon\":\"index_infoCon__WUEG-\",\"inviteInfo\":\"index_inviteInfo__ba1HK\",\"serverName\":\"index_serverName__uI+F9\",\"channelName\":\"index_channelName__FVLpy\",\"customCon\":\"index_customCon__NuY3u\"};","import s from \"./index.module.less\";\nimport React, { memo } from \"react\";\nimport AvatarInfo from \"../AvatarInfo\";\nimport { CHAT_TYPE, INVITE_TYPE, ACCEPT_INVITE_TYPE } from \"@/consts\";\nimport WebIM from \"@/utils/WebIM\";\nimport { getConfirmModalConf, createMsg, deliverMsg, insertServerList } from \"@/utils/common\";\nimport { message as messageWarn, Modal } from \"antd\";\nimport InviteModal from \"@/components/InviteModal\";\nimport { connect } from \"react-redux\";\nimport { insertChannelList } from \"@/utils/common\"\n\nconst CustomMsg = (props) => {\n  const { message, insertChatMessage, appUserInfo, setServerRole } = props;\n  const isServerInvite = message.customEvent === INVITE_TYPE.inviteServer;\n  const acceptInviteEvent =\n    message.customEvent === ACCEPT_INVITE_TYPE.acceptInviteServer ||\n    message.customEvent === ACCEPT_INVITE_TYPE.acceptInviteChannel;\n  let acceptInfo = \"\";\n  if (acceptInviteEvent) {\n    if (message.customEvent === ACCEPT_INVITE_TYPE.acceptInviteServer) {\n      acceptInfo = `已加入社区 ${message.customExts?.server_name}`;\n    } else {\n      acceptInfo = `已加入频道${message.customExts?.server_name}-#${message.customExts.channel_name}`;\n    }\n  }\n  const channelName = isServerInvite\n    ? \"\"\n    : message.customExts?.channel_name || \"\";\n  const inviteInfo = isServerInvite ? \"邀请您加入社区\" : \"邀请您加入频道\";\n  const inviteMe = message.to === WebIM.conn.user;\n  const confirmJoinServer = () => {\n    if (isServerInvite) {\n      WebIM.conn\n        .acceptServerInvite({\n          serverId: message.customExts?.server_id,\n          inviter: message.from\n        })\n        .then((res) => {\n          //插入数据\n          insertServerList(message.customExts?.server_id);\n          //发送消息\n          let msg = createMsg({\n            chatType: CHAT_TYPE.groupChat,\n            type: \"custom\",\n            to: res.data.defaultChannelId,\n            customEvent: ACCEPT_INVITE_TYPE.acceptInviteServer,\n            customExts: {\n              server_name: message.customExts?.server_name\n            }\n          });\n          deliverMsg(msg).then(() => {\n            insertChatMessage({\n              chatType: msg.chatType,\n              fromId: msg.to,\n              messageInfo: {\n                list: [{ ...msg, from: WebIM.conn.user }]\n              }\n            });\n            const serverId = message.customExts?.server_id || \"\";\n            WebIM.conn.getServerRole({ serverId }).then((res) => {\n              setServerRole({ serverId, role: res.data.role });\n            });\n          });\n        })\n        .catch((err) => {\n          if (err.message === \"User is already in server.\") {\n            messageWarn.warn({ content: \"已经在社区了！\" });\n          } else {\n            messageWarn.warn({ content: \"加入失败，请重试！\" });\n          }\n        });\n    } else {\n      WebIM.conn\n        .acceptChannelInvite({\n          serverId: message.customExts?.server_id,\n          channelId: message.customExts?.channel_id,\n          inviter: message.from\n        })\n        .then((res) => {\n          //插入数据\n          insertChannelList(message.customExts?.server_id, message.customExts?.channel_id, res.data);\n          //发送消息\n          let msg = createMsg({\n            chatType: CHAT_TYPE.groupChat,\n            type: \"custom\",\n            to: message.customExts?.channel_id,\n            customEvent: ACCEPT_INVITE_TYPE.acceptInviteChannel,\n            customExts: {\n              server_name: message.customExts?.server_name,\n              channel_name: message.customExts?.channel_name\n            }\n          });\n          deliverMsg(msg).then(() => {\n            insertChatMessage({\n              chatType: msg.chatType,\n              fromId: msg.to,\n              messageInfo: {\n                list: [{ ...msg, from: WebIM.conn.user }]\n              }\n            });\n          });\n        })\n        .catch((err) => {\n          if (err.message === \"User is already in channel.\") {\n            messageWarn.warn({ content: \"已经在频道了！\" });\n          } else {\n            messageWarn.warn({ content: \"加入失败，请重试！\" });\n          }\n        });\n    }\n  };\n  const rejectJoin = () => {\n    if (isServerInvite) {\n      WebIM.conn.rejectServerInvite({\n        serverId: message.customExts?.server_id,\n        inviter: message.from\n      });\n    } else {\n      WebIM.conn.rejectChannelInvite({\n        serverId: message.customExts?.server_id,\n        channelId: message.customExts?.channel_id,\n        inviter: message.from\n      });\n    }\n  }\n  const joinServer = () => {\n    if (inviteMe) {\n      const conf = getConfirmModalConf({\n        title: <div style={{ color: \"#fff\" }}>{inviteInfo}</div>,\n        okText: \"立即加入\",\n        cancelText: \"暂不加入\",\n        content: (\n          <InviteModal\n            serverId={message.customExts?.server_id}\n            isServerInvite={isServerInvite}\n            channelName={channelName}\n          />\n        ),\n        onOk: () => confirmJoinServer(),\n        onCancel: () => rejectJoin()\n      });\n      Modal.confirm(conf);\n    }\n  };\n  if (acceptInviteEvent) {\n    return <div className={s.customCon}>{message.from === WebIM.conn.user ? \"我\" : appUserInfo[message.from]?.nickname || message.from}{acceptInfo}</div>;\n  } else {\n    return (\n      <div className={s.main}>\n        <div\n          className={`${s.custom} ${inviteMe ? s.canHover : null}`}\n          onClick={joinServer}\n        >\n          <div className={s.iconCon}>\n            <AvatarInfo\n              size={48}\n              src={message.customExts?.icon}\n              shape=\"square\"\n              isServer={true}\n            />\n          </div>\n          <div className={s.infoCon}>\n            <div className={s.inviteInfo}>{inviteInfo}</div>\n            <div className={s.serverName}>\n              {message.customExts?.server_name}\n            </div>\n            {!isServerInvite && (\n              <div className={s.channelName}>\n                #{message.customExts?.channel_name}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\nconst mapStateToProps = ({ app }) => {\n  return {\n    appUserInfo: app.appUserInfo\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    insertChatMessage: (params) => {\n      return dispatch({\n        type: \"app/insertChatMessage\",\n        payload: params\n      });\n    },\n    setServerRole: (params) => {\n      return dispatch({\n        type: \"app/setServerRole\",\n        payload: params,\n      })\n    },\n  };\n};\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(CustomMsg));\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"index_main__Nzbwt\",\"list\":\"index_list__6TCpR\",\"iconItem\":\"index_iconItem__4dr5F\"};","import s from \"./index.module.less\";\nimport React, { memo, createRef } from \"react\";\nimport Icon from \"@/components/Icon\";\nimport { Dropdown, Menu, message, Tooltip } from \"antd\";\nimport EmojiPicker from \"../Emoji\";\nimport WebIM from \"@/utils/WebIM\";\nimport { addReactions } from \"@/utils/common\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst antdMessage = message;\nconst Operation = (props) => {\n  const { type, canCreateThread, parent, operation, message, source } = props;\n\n  const OPERATION = {\n    1: \"recall\",\n    2: \"copy\"\n  };\n  const menu = (type) => {\n    const itemList = [];\n    if (message.from === WebIM.conn.user) {\n      itemList.push({\n        key: \"1\",\n        label: (\n          <div className=\"circleDropItem\">\n            <Icon\n              name=\"arrow_back\"\n              size=\"24px\"\n              iconClass=\"circleDropMenuIcon\"\n            />\n            <span className=\"circleDropMenuOp\">撤回</span>\n          </div>\n        )\n      });\n    }\n    if (type === \"txt\") {\n      itemList.push({\n        key: \"2\",\n        label: (\n          <CopyToClipboard\n            text={message.msg}\n            onCopy={() => console.log(\"已复制\")}\n          >\n            <div className=\"circleDropItem\">\n              <Icon\n                name=\"square_2-01\"\n                size=\"24px\"\n                iconClass=\"circleDropMenuIcon\"\n              />\n              <span className=\"circleDropMenuOp\">复制</span>\n            </div>\n          </CopyToClipboard>\n        )\n      });\n    }\n    return <Menu items={itemList} onClick={handleOperation} />;\n  };\n  const handleOperation = ({ key }) => {\n    operation(OPERATION[key]);\n  };\n\n  const tipRef = createRef();\n\n  const addReaction = (reaction) => {\n    addReactions({\n      messageId: message.id,\n      reaction\n    });\n  };\n  const showMoreIcon =\n    message.type === \"txt\" ||\n    (message.type !== \"txt\" && message.from === WebIM.conn.user);\n\n  return (\n    <div className={s.main}>\n      <div className={s.list}>\n        <div className={s.iconItem} ref={tipRef}>\n          <EmojiPicker\n            showFrequently={true}\n            onEmojiSelect={(e) => {\n              addReaction(e.id);\n            }}\n          >\n            <Tooltip\n              title=\"消息回应\"\n              overlayClassName=\"toolTip\"\n              getPopupContainer={() => {\n                return tipRef.current;\n              }}\n            >\n              <div>\n                <Icon name={\"emoji_plus\"} size={\"20px\"} />\n              </div>\n            </Tooltip>\n          </EmojiPicker>\n        </div>\n        {\n          source=== \"groupChat\" && <Tooltip title={canCreateThread ? \"创建子区\" : \"显示子区\"} overlayClassName=\"toolTip\">\n            <div\n              className={s.iconItem}\n              onClick={() => canCreateThread ? operation(\"createThread\") : operation(\"openThreadPanel\")}\n            >\n              <Icon name={\"message_on_message\"} size={\"20px\"} />\n            </div>\n          </Tooltip>\n        }\n        {showMoreIcon && (\n          <Dropdown\n            overlay={menu(type)}\n            placement=\"bottomRight\"\n            trigger={[\"click\"]}\n            overlayClassName=\"circleDropDown\"\n            getPopupContainer={() =>\n              parent.current ? parent.current : document.body\n            }\n          >\n            <div className={s.iconItem}>\n              <Icon name={\"ellipsis\"} size={\"20px\"} />\n            </div>\n          </Dropdown>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Operation);\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"index_main__jxWYa\",\"flag\":\"index_flag__HHrlG\",\"thread\":\"index_thread__poQA6\",\"layout\":\"index_layout__r6S6k\",\"info\":\"index_info__Xyrl9\",\"infoLeft\":\"index_infoLeft__iOBgS\",\"icon\":\"index_icon__EK71Z\",\"threadName\":\"index_threadName__C4jrN\",\"count\":\"index_count__6Q47n\",\"messageCount\":\"index_messageCount__xBOzW\",\"content\":\"index_content__NNoiE\",\"avatar\":\"index_avatar__5vUZt\",\"message\":\"index_message__nc05T\",\"messageInfo\":\"index_messageInfo__mYHU-\",\"sender\":\"index_sender__tIfpu\",\"time\":\"index_time__6PQra\",\"text\":\"index_text__3RX0N\"};","import s from \"./index.module.less\";\nimport React, { memo } from \"react\";\nimport Icon from \"../Icon\";\nimport AvatarInfo from \"../AvatarInfo\";\nimport { getTimeDiff, renderTxt } from \"@/utils/common\";\nimport { connect } from \"react-redux\";\n\nconst ThreadMsg = (props) => {\n  const { thread, clickCount, appUserInfo } = props;\n  const formatMsg = (message) => {\n    const type = message.type;\n    var msg = \"\";\n    switch (type) {\n      case \"txt\":\n        msg = renderTxt(message.msg);\n        break;\n      case \"file\":\n        msg = \"/文件/\";\n        break;\n      case \"img\":\n        msg = \"/图片消息/\";\n        break;\n      default:\n        break;\n    }\n    return msg;\n  };\n  return (\n    <div className={s.main}>\n      <div className={s.flag}>\n        <Icon name=\"bend_line_big\" size=\"20px\" color=\"#767676\" />\n      </div>\n      <div className={s.thread} onClick={clickCount}>\n        <div className={s.layout}>\n          <div className={s.info}>\n            <div className={s.infoLeft}>\n              <span className={s.icon}><Icon name=\"hashtag_message\" size=\"18px\" /></span>\n              <span className={s.threadName}>{thread.name}</span>\n            </div>\n            <div className={s.count}>\n              <span className={s.messageCount}>\n                {thread.messageCount\n                  ? thread.messageCount < 100\n                    ? thread.messageCount\n                    : \"99+\"\n                  : 0}\n              </span>\n              <Icon name=\"shevron_right\" size=\"12px\" color=\"#27AE60\" />\n            </div>\n          </div>\n          {thread.lastMessage && JSON.stringify(thread.lastMessage) !== \"{}\" ? (\n            <div className={s.content}>\n              <div className={s.avatar}>\n                <AvatarInfo\n                  size={24}\n                  src={appUserInfo[thread.lastMessage.from]?.avatarurl}\n                />\n              </div>\n              <div className={s.message}>\n                <div className={s.messageInfo}>\n                  <span className={s.sender}>\n                    {appUserInfo[thread.lastMessage.from]?.nickname ||\n                      thread.lastMessage.from}\n                  </span>\n                  <span className={s.time}>\n                    {getTimeDiff(thread.lastMessage.time)}\n                  </span>\n                </div>\n                <div className={s.text}>{formatMsg(thread.lastMessage)}</div>\n              </div>\n            </div>\n          ) : (\n            <div className={s.content}>暂无消息</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ app }) => {\n  return {\n    appUserInfo: app.appUserInfo\n  };\n};\n\nexport default memo(connect(mapStateToProps, null)(ThreadMsg));\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"index_main__SLJOW\",\"con\":\"index_con__S4DlV\",\"active\":\"index_active__ZI3c9\",\"add\":\"index_add__pK4Cf\"};","import s from \"./index.module.less\";\nimport React, { memo, useMemo } from \"react\";\nimport EmojiPicker from \"../Emoji\";\nimport { renderTxt, addReactions, deleteReactions } from \"@/utils/common\";\n\nconst ReactionMsg = (props) => {\n  const { reaction, msgId } = props;\n\n  const reactions = useMemo(() => {\n    return reaction.filter((item) => item.count > 0);\n  }, [reaction]);\n\n  const Emoji = (props) => {\n    const { info } = props;\n    return (\n      <div\n        onClick={() => {\n          info.isAddedBySelf ? deleteReaction(info) : addReaction(info);\n        }}\n        className={`${s.con} ${info.isAddedBySelf ? s.active : \"\"}`}\n      >\n        <span>{renderTxt(info.reaction)}</span>\n        <span>{info.count}</span>\n      </div>\n    );\n  };\n\n  const addReaction = ({ reaction }) => {\n    addReactions({\n      messageId: msgId,\n      reaction\n    });\n  };\n\n  const deleteReaction = ({ reaction }) => {\n    deleteReactions({\n      messageId: msgId,\n      reaction: encodeURIComponent(reaction)\n    });\n  };\n\n  return (\n    <div className={s.main}>\n      {reactions.map((item) => {\n        return <Emoji info={item} key={item.reaction} />;\n      })}\n      {reactions?.length > 0 && (\n        <div className={`${s.con} ${s.add}`} style={{ border: \"none\" }}>\n          <EmojiPicker\n            style={{ top: \"30px\", zIndex: 99 }}\n            showFrequently={true}\n            onEmojiSelect={(e) => {\n              addReaction({ reaction: e.id });\n            }}\n          ></EmojiPicker>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionMsg);\n","// extracted by mini-css-extract-plugin\nexport default {\"userDetail\":\"index_userDetail__9aUgI\",\"infoCon\":\"index_infoCon__BDGr1\",\"left\":\"index_left__+CZcC\",\"avatar\":\"index_avatar__WJ4iH\",\"info\":\"index_info__zK+1p\",\"nickname\":\"index_nickname__AUU+z\",\"idName\":\"index_idName__85kq5\",\"op\":\"index_op__kLmhH\",\"toChat\":\"index_toChat__eOoDy\",\"chatCon\":\"index_chatCon__TwOfk\",\"private\":\"index_private__41GG+\"};","import React, { memo, useMemo, useEffect, useState } from \"react\";\nimport s from \"./index.module.less\";\nimport AvatarInfo from \"@/components/AvatarInfo\";\nimport { connect } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Icon from \"@/components/Icon\";\nimport { Menu, message } from \"antd\";\nimport { UN_MUTE, MUTE, KICK, USER_ROLE } from \"@/consts\";\nimport WebIM from \"@/utils/WebIM\";\n\nconst ChannelUserDetail = (props) => {\n  const { userId, appUserInfo, currentChannelInfo, serverRole, setSelected } = props;\n\n  const [muteId, setMuteId] = useState([]);\n  const { serverId, channelId } = useParams();\n\n  // 当前操作者的用户角色\n  const optRole = serverRole[serverId];\n\n  const canOpt = !(optRole === USER_ROLE.user);\n\n  const navigate = useNavigate();\n  //私聊\n  const toChat = () => {\n    setSelected(\"contacts\");\n    navigate(`/main/contacts/chat/${userId}`);\n  };\n\n  const muteUser = () => {\n    WebIM.conn\n      .muteChannelMember({\n        serverId,\n        channelId,\n        userId,\n        duration: -1\n      })\n      .then(() => {\n        setMuteId([...muteId, userId]);\n      }).catch(err => {\n        if (err.type === 17 && JSON.parse(err.data).error_description === \"User is not in server.\") {\n          message.warn({ content: \"用户已退出社区\" });\n          console.log(\"err=====\")\n        }\n      });\n  };\n\n  const unMuteUser = () => {\n    WebIM.conn.unmuteChannelMember({\n      serverId,\n      channelId,\n      userId\n    }).then(() => {\n      let ids = muteId.filter((item) => !item.includes(userId));\n      setMuteId(ids);\n    }).catch(err => {\n      if (err.type === 17 && JSON.parse(err.data).error_description === \"User is not in server.\") {\n        message.warn({ content: \"用户已退出社区\" });\n      }\n    });\n  };\n\n  const kickOut = () => {\n    WebIM.conn.removeChannelMember({\n      serverId,\n      channelId,\n      userId\n    }).catch(err=>{\n        if(err.type === 17 && JSON.parse(err.data).error_description === \"User is not in server.\"){\n          message.warn({ content: \"用户已退出社区\" });\n        }\n      });\n  };\n\n  const onMenuClick = (e) => {\n    switch (e.key) {\n      case \"mute\":\n        muteUser();\n        break;\n      case \"unmute\":\n        unMuteUser();\n        break;\n      case \"kick\":\n        kickOut();\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getMutedlist = () => {\n    WebIM.conn\n      .getChannelMutelist({\n        serverId,\n        channelId\n      })\n      .then((res) => {\n        const ids = res.data.list.map((item) => item.userId);\n        setMuteId(ids);\n      });\n  };\n\n  const UserMenuChildren = useMemo(() => {\n    let roleMenu = [];\n    if (muteId.includes(userId)) {\n      roleMenu.push(UN_MUTE);\n    } else {\n      roleMenu.push(MUTE);\n    }\n    currentChannelInfo?.defaultChannel !== 1 && roleMenu.push(KICK);\n    return roleMenu;\n  }, [muteId, currentChannelInfo]);\n\n  useEffect(() => {\n    if (canOpt) {\n      getMutedlist();\n    }\n  }, []);\n\n  const UserMenuItems = [\n    {\n      label: <Icon size=\"22px\" color=\"#fff\" name=\"ellipsis\" />,\n      key: \"SubMenu\",\n      children: UserMenuChildren\n    }\n  ];\n\n  return (\n    <div className={s.userDetail}>\n      <div className={s.infoCon}>\n        <div className={s.left}>\n          <div className={s.avatar}>\n            <AvatarInfo size={56} src={appUserInfo[userId]?.avatarurl} />\n          </div>\n          <div className={s.info}>\n            <div className={s.nickname}>\n              {appUserInfo[userId]?.nickname || userId}\n            </div>\n            <div className={s.idName}>环信ID：{userId}</div>\n          </div>\n        </div>\n        {canOpt && (\n          <div className={s.op}>\n            <Menu\n              className={s.menuWrap}\n              onClick={(e) => {\n                onMenuClick(e);\n              }}\n              style={{ padding: 0 }}\n              theme={\"dark\"}\n              selectable={false}\n              triggerSubMenuAction=\"click\"\n              mode=\"horizontal\"\n              items={UserMenuItems}\n            ></Menu>\n          </div>\n        )}\n      </div>\n      <div className={s.toChat}>\n        <span className={s.chatCon} onClick={toChat}>\n          <Icon name=\"message\" size=\"24px\" color=\"rgba(255,255,255,.74)\" />\n          <span className={s.private}>私聊</span>\n        </span>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = ({ app, contact }) => {\n  return {\n    appUserInfo: app.appUserInfo,\n    serverRole: app.serverRole,\n    contactsList: contact.contactsList,\n    hasSentApply: contact.hasSentApply,\n    currentChannelInfo: app.currentChannelInfo\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSelected: (params) => {\n      return dispatch({\n        type: \"app/setSelectedTab\",\n        payload: params\n      });\n    },\n  }\n}\n\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(ChannelUserDetail));\n","import AvatarInfo from \"@/components/AvatarInfo\";\nimport s from \"./index.module.less\";\nimport React, { memo, useRef, useMemo, useState, useEffect } from \"react\";\nimport TxtMsg from \"@/components/TxtMsg\";\nimport FileMsg from \"@/components/FileMsg\";\nimport ImgMsg from \"@/components/ImgMsg\";\nimport RecallMsg from \"@/components/RecallMsg\";\nimport CustomMsg from \"@/components/CustomMsg\";\nimport Operation from \"@/components/MsgOperation\";\nimport ThreadMsg from \"@/components/ThreadMsg\";\nimport ReactionMsg from \"@/components/ReactionMsg\";\nimport { renderTime, getUsersInfo } from \"@/utils/common\";\nimport { connect } from \"react-redux\";\nimport { MESSAGE_ITEM_SOURCE } from \"@/consts\";\nimport WebIM from \"@/utils/WebIM\";\nimport { Popover } from \"antd\";\nimport UserDetail from \"@/views/Channel/components/UserDetail\";\n\nconst Message = (props) => {\n  const parent = useRef();\n  const operationRef = useRef();\n  const {\n    source,\n    isThreadMessage,\n    message,\n    reactionMap,\n    onHandleOperation,\n    appUserInfo\n  } = props;\n\n  const reactionList = useMemo(() => {\n    return reactionMap.get(message.id) || [];\n  }, [reactionMap, message.id]);\n\n  //消息操作 撤回、复制\n  const handleOperation = (operation) => {\n    onHandleOperation(operation, isThreadMessage, message);\n  };\n\n  //点击thread消息数量\n  const handleThreadCount = () => {\n    onHandleOperation(\"openThreadPanel\", isThreadMessage, message);\n  };\n  //点击头像-好友详情\n  const handlerAvatar = () => {\n    onHandleOperation(\"openUserInfoPanel\", isThreadMessage, message);\n    if (source === \"groupChat\") {\n      if (WebIM.conn.user !== message.from) {\n        //更新单聊者信息\n        getUsersInfo([message.from]).then(() => {\n          handleUserPanel(true);\n        });\n      }\n    }\n  };\n  const [showUserPanel, setShowUserPanel] = useState(false);\n  const handleUserPanel = (state) => {\n    setShowUserPanel(state);\n  };\n\n  const canCreateThread =\n    source === MESSAGE_ITEM_SOURCE.groupChat &&\n    !isThreadMessage &&\n    message.type !== \"recall\" &&\n    (!message.chatThreadOverview ||\n      JSON.stringify(message.chatThreadOverview) === \"{}\");\n\n  const showThreadInfo =\n    source === MESSAGE_ITEM_SOURCE.groupChat &&\n    message.chatThreadOverview &&\n    message.type !== \"recall\" &&\n    JSON.stringify(message.chatThreadOverview) !== \"{}\";\n\n  const showReactionInfo =\n    source !== MESSAGE_ITEM_SOURCE.threadParentMsg &&\n    reactionList?.length > 0 &&\n    message.type !== \"recall\";\n  const showOperation =\n    source !== MESSAGE_ITEM_SOURCE.threadParentMsg &&\n    message.type !== \"recall\" &&\n    message.type !== \"custom\";\n\n\n  const [selected, setSelected] = useState(false);\n  //点击消息\n  useEffect(() => {\n    let onClick = (e) => {\n      let dom = operationRef.current;\n      if (dom) {\n        // 如果点击的区域不在自定义dom范围\n        if (dom.contains(e.target)) {\n          setSelected(true)\n        } else {\n          setSelected(false)\n        }\n      }\n    };\n    document.addEventListener(\"click\", onClick);\n    return () => {\n      document.removeEventListener(\"click\", onClick);\n    };\n  }, []);\n  return (\n    <div className={`${s.layout} ${selected ? s.selected : null}`} ref={parent}>\n      <div className={s.message}>\n        <div className={s.avatar} onClick={handlerAvatar}>\n          <Popover\n            placement=\"bottomLeft\"\n            destroyTooltipOnHide={true}\n            overlayClassName={s.channelUserInfo}\n            content={<UserDetail userId={message.from} />}\n            visible={showUserPanel}\n            onVisibleChange={handleUserPanel}\n            trigger=\"click\"\n          >\n            <AvatarInfo size={36} src={appUserInfo[message.from]?.avatarurl} />\n          </Popover>\n        </div>\n\n        <div className={s.messageInfo}>\n          <div className={s.bar}>\n            <div className={s.l}>\n              <span className={s.name}>\n                {appUserInfo[message.from]?.nickname || message.from}\n              </span>\n              <span className={s.date}>{renderTime(message.time)}</span>\n            </div>\n            {showOperation && (\n              <div className={s.operation} ref={operationRef}>\n                <Operation\n                  type={message.type}\n                  canCreateThread={canCreateThread}\n                  source={source}\n                  message={message}\n                  parent={parent}\n                  operation={handleOperation}\n                />\n              </div>\n            )}\n          </div>\n          <div className={s.content}>\n            {message.type === \"txt\" && <TxtMsg message={message} />}\n            {message.type === \"img\" && <ImgMsg message={message} />}\n            {message.type === \"file\" && <FileMsg message={message} />}\n            {message.type === \"recall\" && <RecallMsg message={message} />}\n            {message.type === \"custom\" && <CustomMsg message={message} />}\n          </div>\n        </div>\n      </div>\n      {showReactionInfo && (\n        <ReactionMsg msgId={message.id} reaction={reactionList} />\n      )}\n\n      {showThreadInfo && (\n        <ThreadMsg\n          thread={message.chatThreadOverview}\n          clickCount={handleThreadCount}\n        />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ app }) => {\n  return {\n    reactionMap: app.reactionMap,\n    appUserInfo: app.appUserInfo\n  };\n};\n\nexport default memo(connect(mapStateToProps, null)(Message));\n","//download.js v4.21, by dandavis; 2008-2018. [MIT] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compatible way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n// v4 adds AMD/UMD, commonJS, and plain browser support\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n// https://github.com/rndme/download\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.download = factory();\n  }\n}(this, function () {\n\n\treturn function download(data, strFileName, strMimeType) {\n\n\t\tvar self = window, // this script is only for browsers anyway...\n\t\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\t\tmimeType = strMimeType || defaultMime,\n\t\t\tpayload = data,\n\t\t\turl = !strFileName && !strMimeType && payload,\n\t\t\tanchor = document.createElement(\"a\"),\n\t\t\ttoString = function(a){return String(a);},\n\t\t\tmyBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\n\t\t\tfileName = strFileName || \"download\",\n\t\t\tblob,\n\t\t\treader;\n\t\t\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\n\t\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\t\tpayload=[payload, mimeType];\n\t\t\tmimeType=payload[0];\n\t\t\tpayload=payload[1];\n\t\t}\n\n\n\t\tif(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\n\t\t\tfileName = url.split(\"/\").pop().split(\"?\")[0];\n\t\t\tanchor.href = url; // assign href prop to temp anchor\n\t\t  \tif(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\n        \t\tvar ajax=new XMLHttpRequest();\n        \t\tajax.open( \"GET\", url, true);\n        \t\tajax.responseType = 'blob';\n        \t\tajax.onload= function(e){ \n\t\t\t\t  download(e.target.response, fileName, defaultMime);\n\t\t\t\t};\n        \t\tsetTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\n\t\t\t    return ajax;\n\t\t\t} // end if valid url?\n\t\t} // end if url?\n\n\n\t\t//go ahead and download dataURLs right away\n\t\tif(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)){\n\t\t\n\t\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\n\t\t\t\tpayload=dataUrlToBlob(payload);\n\t\t\t\tmimeType=payload.type || defaultMime;\n\t\t\t}else{\t\t\t\n\t\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\n\t\t\t\t\tsaver(payload) ; // everyone else can save dataURLs un-processed\n\t\t\t}\n\t\t\t\n\t\t}else{//not data url, is it a string with special needs?\n\t\t\tif(/([\\x80-\\xff])/.test(payload)){\t\t\t  \n\t\t\t\tvar i=0, tempUiArr= new Uint8Array(payload.length), mx=tempUiArr.length;\n\t\t\t\tfor(i;i<mx;++i) tempUiArr[i]= payload.charCodeAt(i);\n\t\t\t \tpayload=new myBlob([tempUiArr], {type: mimeType});\n\t\t\t}\t\t  \n\t\t}\n\t\tblob = payload instanceof myBlob ?\n\t\t\tpayload :\n\t\t\tnew myBlob([payload], {type: mimeType}) ;\n\n\n\t\tfunction dataUrlToBlob(strUrl) {\n\t\t\tvar parts= strUrl.split(/[:;,]/),\n\t\t\ttype= parts[1],\n\t\t\tindexDecoder = strUrl.indexOf(\"charset\")>0 ? 3: 2,\n\t\t\tdecoder= parts[indexDecoder] == \"base64\" ? atob : decodeURIComponent,\n\t\t\tbinData= decoder( parts.pop() ),\n\t\t\tmx= binData.length,\n\t\t\ti= 0,\n\t\t\tuiArr= new Uint8Array(mx);\n\n\t\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\n\n\t\t\treturn new myBlob([uiArr], {type: type});\n\t\t }\n\n\t\tfunction saver(url, winMode){\n\n\t\t\tif ('download' in anchor) { //html5 A[download]\n\t\t\t\tanchor.href = url;\n\t\t\t\tanchor.setAttribute(\"download\", fileName);\n\t\t\t\tanchor.className = \"download-js-link\";\n\t\t\t\tanchor.innerHTML = \"downloading...\";\n\t\t\t\tanchor.style.display = \"none\";\n \t\t\t\tanchor.addEventListener('click', function(e) {\n \t\t\t\t\te.stopPropagation();\n \t\t\t\t\tthis.removeEventListener('click', arguments.callee);\n \t\t\t\t});\n\t\t\t\tdocument.body.appendChild(anchor);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tanchor.click();\n\t\t\t\t\tdocument.body.removeChild(anchor);\n\t\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\n\t\t\t\t}, 66);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// handle non-a[download] safari as best we can:\n\t\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n\t\t\t\tif(/^data:/.test(url))\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\n\t\t\t\t\t// eslint-disable-next-line no-restricted-globals\n\t\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//do iframe dataURL download (old ch+FF):\n\t\t\tvar f = document.createElement(\"iframe\");\n\t\t\tdocument.body.appendChild(f);\n\n\t\t\tif(!winMode && /^data:/.test(url)){ // force a mime that will download:\n\t\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t}\n\t\t\tf.src=url;\n\t\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\n\n\t\t}//end saver\n\n\n\n\n\t\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\t\treturn navigator.msSaveBlob(blob, fileName);\n\t\t}\n\n\t\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\t\tsaver(self.URL.createObjectURL(blob), true);\n\t\t}else{\n\t\t\t// handle non-Blob()+non-URL browsers:\n\t\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\n\t\t\t\ttry{\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\n\t\t\t\t}catch(y){\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Blob but not URL support:\n\t\t\treader=new FileReader();\n\t\t\treader.onload=function(e){\n\t\t\t\tsaver(this.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(blob);\n\t\t}\n\t\treturn true;\n\t}; /* end download() */\n}));\n"],"names":["EmojiPanel","onSelect","showFrequently","frequentlyEmoji","JSON","parse","localStorage","getItem","className","s","length","map","id","width","height","src","emojiMap","alt","onClick","emojiConfig","item","EmojiPicker","props","useState","emojiVisible","setEmojiVisible","emojiIcon","disabled","wrapRef","useRef","useEffect","e","dom","current","contains","target","document","addEventListener","removeEventListener","ref","content","setFrequentlyEmoji","onEmojiSelect","trigger","visible","destroyTooltipOnHide","keepParent","overlayClassName","placement","children","Icon","size","iconClass","name","memo","scrollBottom","setTimeout","scrollToBottom","getElementById","SCROLL_WARP_ID","connect","channel","thread","currentThreadInfo","isCreatingThread","dispatch","insertChatMessage","params","type","payload","setThreadMessage","fromId","chatType","isThread","threadName","text","setText","lastEditRangeRef","idRef","setLastRange","selection","getSelection","getRangeAt","beforeUploadImg","file","resFile","getImgMsg","createMsg","to","isChatThread","formatImFile","onFileUploadError","console","log","onFileUploadProgress","progress","onFileUploadComplete","getTarget","then","imgMsg","deliverMsg","res","message","from","WebIM","messageInfo","list","menu","items","key","label","beforeUpload","accept","maxCount","showUploadList","fileMsg","filename","ext","file_length","file_type","getFileMsg","useCallback","Promise","resolve","reject","options","replace","messageId","parentMessage","parentId","threadId","data","chatThreadId","sendMessage","msg","convertToMessage","innerHTML","onKeyDown","keyCode","preventDefault","insertNode","pasteHtmlAtCaret","onPaste","event","paste","clipboardData","window","getData","focus","html","renderHtml","innerRef","onDrop","onKeyUp","placeholder","contentEditable","onChange","value","Emoji","createElement","getEmojiHtml","dataKey","overlay","TxtMsg","renderTxt","FileMsg","Math","floor","fetch","url","blob","download","catch","err","finally","ImgMsg","preview","RecallMsg","appUserInfo","app","setServerRole","isServerInvite","customEvent","INVITE_TYPE","acceptInviteEvent","ACCEPT_INVITE_TYPE","acceptInfo","customExts","server_name","channel_name","channelName","inviteInfo","inviteMe","nickname","conf","getConfirmModalConf","title","style","color","okText","cancelText","InviteModal","serverId","server_id","onOk","inviter","insertServerList","CHAT_TYPE","defaultChannelId","role","messageWarn","channelId","channel_id","insertChannelList","confirmJoinServer","onCancel","rejectJoin","Modal","AvatarInfo","icon","shape","isServer","Operation","canCreateThread","parent","operation","source","OPERATION","handleOperation","tipRef","createRef","showMoreIcon","reaction","addReactions","getPopupContainer","itemList","push","CopyToClipboard","onCopy","body","clickCount","messageCount","lastMessage","stringify","avatarurl","getTimeDiff","time","formatMsg","ReactionMsg","msgId","reactions","useMemo","filter","count","info","isAddedBySelf","deleteReaction","addReaction","deleteReactions","encodeURIComponent","border","top","zIndex","contact","serverRole","contactsList","hasSentApply","currentChannelInfo","setSelected","userId","muteId","setMuteId","useParams","canOpt","USER_ROLE","navigate","useNavigate","onMenuClick","duration","error_description","ids","includes","UserMenuChildren","roleMenu","UN_MUTE","MUTE","defaultChannel","KICK","UserMenuItems","padding","theme","selectable","triggerSubMenuAction","mode","reactionMap","operationRef","isThreadMessage","onHandleOperation","reactionList","get","showUserPanel","setShowUserPanel","handleUserPanel","state","MESSAGE_ITEM_SOURCE","chatThreadOverview","showThreadInfo","showReactionInfo","showOperation","selected","getUsersInfo","UserDetail","onVisibleChange","renderTime","define","strFileName","strMimeType","reader","self","defaultMime","mimeType","anchor","toString","a","String","myBlob","Blob","MozBlob","WebKitBlob","fileName","call","bind","this","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","response","send","test","navigator","msSaveBlob","dataUrlToBlob","saver","i","tempUiArr","Uint8Array","mx","charCodeAt","strUrl","parts","binData","atob","decodeURIComponent","uiArr","winMode","setAttribute","display","stopPropagation","arguments","callee","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","confirm","location","f","createObjectURL","constructor","btoa","y","FileReader","result","readAsDataURL"],"sourceRoot":""}